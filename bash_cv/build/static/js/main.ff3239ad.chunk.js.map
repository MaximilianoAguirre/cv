{"version":3,"sources":["components/bash/const.js","components/bash/util.js","components/bash/commands.js","components/bash/parser.js","components/bash/bash.js","components/bash/styles.js","components/bash/component.js","components/bash/index.js","conf/structure.js","files/jobs/summary.js","files/README.md.js","conf/extensions.js","docs/cv.pdf","components/FloatingButtons.js","App.js","reportWebVitals.js","index.js"],"names":["IS_SERVER","window","BACK_REGEX","Errors","COMMAND_NOT_FOUND","FILE_EXISTS","NO_SUCH_FILE","NOT_A_DIRECTORY","IS_A_DIRECTORY","IS_BINARY","EnvVariables","SHELL","USER","state","settings","user","username","PATH","home","PWD","cwd","LANG","navigator","language","replace","HOME","LOGNAME","OLDPWD","trim","str","char","substr","length","appendError","error","command","Object","assign","history","concat","value","extractPath","relativePath","rootPath","path","match","getDirectoryByPath","structure","split","dir","i","child","err","hasOwnProperty","getEnvVariables","keys","reduce","envVars","key","ls","exec","flags","args","fullPath","Util","content","a","unshift","filter","name","l","map","join","cat","fileName","pop","lines","mkdir","newDirectory","deepCopy","JSON","parse","stringify","cd","envVariables","slice","man","pwd","directory","echo","input","ECHO_LENGTH","printenv","values","whoami","hostname","rm","file","undefined","r","R","parseInput","tokens","shift","anonArgPos","token","next","forEach","flag","Bash","extensions","this","commands","BaseCommands","prevCommands","prevCommandsIndex","currentState","push","newState","commandList","deps","runCommands","errorOccurred","reducer","nextState","item","indexOf","result","suggestions","pathList","partialPath","prefix","BaseStyles","display","flexDirection","fontFamily","fontSize","fontWeight","overflow","textAlign","height","cursor","userSelect","width","flexGrow","overflowY","padding","transition","paddingRight","background","border","color","outline","appearance","marginLeft","whiteSpace","styles","light","body","backgroundColor","header","dark","noop","Terminal","ctrlPressed","handleKeyDown","bind","handleKeyUp","refs","focus","nextProps","props","scrollIntoView","suggestion","autocomplete","evt","which","attemptAutocomplete","preventDefault","setState","execute","hasPrevCommand","getPrevCommand","hasNextCommand","getNextCommand","target","theme","style","Styles","getPath","getPrefixComponent","output","data-test-id","inner_output","main","onClick","onContextMenu","e","clipboard","readText","then","text","renderHistoryItem","onSubmit","handleSubmit","form","autoComplete","onKeyDown","onKeyUp","ref","id","Component","Themes","LIGHT","DARK","defaultProps","onClose","onExpand","onMinimize","ReactBash","binary","initial_history","help","0","includes","date","Date","toUTCString","sudo","console","log","test","open","resource","github","linkedin","pdf","clear","tree","indent","innerWalk","node","Array","children","walk","convert","response","FloatingButtons","baseStyle","className","href","rel","top","cv","download","App","useState","setTheme","extra_extensions","lumos","nox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff3239ad.chunk.js","sourcesContent":["export const IS_SERVER = typeof window === 'undefined';\n\nexport const BACK_REGEX = /\\/?\\.?[\\w-_]+\\/\\.\\./;\n\nexport const Errors = {\n    COMMAND_NOT_FOUND: '-bash: $1: command not found',\n    FILE_EXISTS: 'mkdir: $1: File exists',\n    NO_SUCH_FILE: '-bash: $1: No such file or directory',\n    NOT_A_DIRECTORY: '-bash: $1: Not a directory',\n    IS_A_DIRECTORY: 'cat: $1: Is a directory',\n    IS_BINARY: 'cat: $1: Is a binary file'\n};\n\nexport const EnvVariables = {\n    SHELL:'/bin/bash',\n    USER: state => state.settings.user.username,\n    PATH: state => `/bin:/usr/bin:${state.home}`,\n    PWD: state => `/${state.cwd}`,\n    LANG: () => {\n        return !IS_SERVER ? `${navigator.language.replace('-', '_')}.UTF-8` : 'en_US.UTF-8';\n    },\n    HOME: state => state.home,\n    LOGNAME: state => state.settings.user.username,\n    OLDPWD: '/',\n};\n","import { Errors, BACK_REGEX, EnvVariables } from './const';\n\n/*\n * This is a utility method for trimming the beginning\n * and ending of a string of any given char.\n *\n * @param {string} str - the string the trim\n * @param {string} char - the char to remove\n * @returns {string} the trimmed string\n */\nexport function trim(str, char) {\n    if (str[0] === char) {\n        str = str.substr(1);\n    }\n    if (str[str.length - 1] === char) {\n        str = str.substr(0, str.length - 1);\n    }\n    return str;\n}\n\n/*\n * This is a utility method for appending an error\n * message to the current state.\n *\n * @param {Object} state - the terminal state\n * @param {string} error - the error to interpolate\n * @param {string} command - the string to insert\n * @returns {Object} the new terminal state\n */\nexport function appendError(state, error, command) {\n    return Object.assign({}, state, {\n        error: true,\n        history: state.history.concat({\n            value: error.replace('$1', command),\n        }),\n    });\n}\n\n/*\n * This is a utility method for appending a relative path\n * to a root path. Handles trimming and backtracking.\n *\n * @param {string} relativePath\n * @param {string} rootPath\n * @returns {string} the combined path\n */\nexport function extractPath(relativePath, rootPath) {\n    // Short circuit for relative path\n    if (relativePath === '') return rootPath;\n\n    // Strip trailing slash\n    relativePath = trim(relativePath, '/');\n\n    // Create raw path\n    let path = `${rootPath ? rootPath + '/' : ''}${relativePath}`;\n\n    // Strip ../ references\n    while (path.match(BACK_REGEX)) {\n        path = path.replace(BACK_REGEX, '');\n    }\n    return trim(path, '/');\n}\n\n/*\n * This is a utility method for traversing the structure\n * down the relative path.\n *\n * @param {Object} structure - the terminal file structure\n * @param {string} relativePath - the path of the directory\n * @returns {Object} the directory or error\n */\nexport function getDirectoryByPath(structure, relativePath) {\n    const path = relativePath.split('/');\n\n    // Short circuit for empty root path\n    if (!path[0]) return { dir: structure };\n\n    let dir = structure;\n    let i = 0;\n    while (i < path.length) {\n        const key = path[i];\n        const child = dir[key];\n        if (child && typeof child === 'object') {\n            if (child.hasOwnProperty('content')) {\n                return { err: Errors.NOT_A_DIRECTORY.replace('$1', relativePath) };\n            } else {\n                dir = child;\n            }\n        } else {\n            return { err: Errors.NO_SUCH_FILE.replace('$1', relativePath) };\n        }\n        i++;\n    }\n    return { dir };\n}\n\n/*\n * This is a utility method for getting the environment\n * variables with the dynamic values updated with state.\n *\n * @param {Object} state - the terminal state\n * @returns {Object} the updated env variables\n */\nexport function getEnvVariables(state) {\n    return Object.keys(EnvVariables).reduce((envVars, key) => {\n        const value = EnvVariables[key];\n        envVars[key] = typeof value === 'function' ? value(state) : value;\n        return envVars;\n    }, {});\n}\n\n/*\n * This is a utility method for determining if a given filesystem entry is a\n * file or directoy.\n *\n * @param {Object} entry - the filesystem entry\n * @returns {Boolean} whether the entry is a file\n */\nexport function isFile(entry) {\n    return entry.content !== undefined;\n}","import * as Util from './util';\nimport { Errors } from './const';\n\nexport const ls = {\n    exec: (state, { flags, args }) => {\n        const path = args[0] || '';\n        const fullPath = Util.extractPath(path, state.cwd);\n        const { err, dir } = Util.getDirectoryByPath(state.structure, fullPath);\n\n        if (err) {\n            return Util.appendError(state, err, path);\n        } else {\n            let content = Object.keys(dir);\n            if (!flags.a) {\n                content = content.filter(name => name[0] !== '.');\n            }\n            else {\n                content.unshift(\"..\")\n                content.unshift(\".\")\n            }\n            if (flags.l) {\n                return Object.assign({}, state, {\n                    history: state.history.concat(content.map(value => {\n                        return { value };\n                    })),\n                });\n            } else {\n                return Object.assign({}, state, {\n                    history: state.history.concat({ value: content.join(' ') }),\n                });\n            }\n        }\n    },\n};\n\nexport const cat = {\n    exec: (state, { args }) => {\n        const path = args[0];\n        if (!path) return Util.appendError(state, Errors.NO_SUCH_FILE, '');\n\n        const relativePath = path.split('/');\n        const fileName = relativePath.pop();\n        const fullPath = Util.extractPath(relativePath.join('/'), state.cwd);\n        const { err, dir } = Util.getDirectoryByPath(state.structure, fullPath);\n        if (err) {\n            return Util.appendError(state, err, path);\n        } else if (!dir[fileName]) {\n            return Util.appendError(state, Errors.NO_SUCH_FILE, path);\n        } else if (dir[fileName].hasOwnProperty('binary')) {\n            return Util.appendError(state, Errors.IS_BINARY, path);\n        } else if (!dir[fileName].hasOwnProperty('content')) {\n            return Util.appendError(state, Errors.IS_A_DIRECTORY, path);\n        } else {\n            const content = dir[fileName].content.replace(/\\n$/, '');\n            const lines = content.split('\\n').map(value => ({ value }));\n            return Object.assign({}, state, {\n                history: state.history.concat(lines),\n            });\n        }\n    },\n};\n\nexport const mkdir = {\n    exec: (state, { args }) => {\n        const path = args[0];\n        const relativePath = path.split('/');\n        const newDirectory = relativePath.pop();\n        const fullPath = Util.extractPath(relativePath.join('/'), state.cwd);\n        const deepCopy = JSON.parse(JSON.stringify(state.structure));\n        const { dir } = Util.getDirectoryByPath(deepCopy, fullPath);\n\n        if (dir[newDirectory]) {\n            return Util.appendError(state, Errors.FILE_EXISTS, path);\n        } else {\n            dir[newDirectory] = {};\n            return Object.assign({}, state, { structure: deepCopy });\n        }\n    },\n};\n\nexport const cd = {\n    exec: (state, { args }) => {\n        const path = args[0];\n        const envVariables = Util.getEnvVariables(state);\n\n        if (!path) return Object.assign({}, state, { cwd: envVariables.HOME !== '/' ? envVariables.HOME.slice(1) : envVariables.HOME });\n        if (path === '/') return Object.assign({}, state, { cwd: '' });\n        // if (path === '-') return Object.assign({}, state, { cwd: '' });\n\n        const fullPath = Util.extractPath(path, state.cwd);\n        const { err } = Util.getDirectoryByPath(state.structure, fullPath);\n\n        if (err) {\n            return Util.appendError(state, err, path);\n        } else {\n            return Object.assign({}, state, { cwd: fullPath });\n        }\n    },\n    man: `Usage: cd [dir]\n\n  Change the current directory to DIR.  The default DIR is the value of the HOME shell variable.`\n};\n\nexport const pwd = {\n    exec: (state) => {\n        const directory = `/${state.cwd}`;\n        return Object.assign({}, state, {\n            history: state.history.concat({ value: directory }),\n        });\n    },\n    man: `Usage: pwd\n\n  Prints current working directory`\n};\n\nexport const echo = {\n    exec: (state, { input }) => {\n        const ECHO_LENGTH = 'echo '.length;\n        const envVariables = Util.getEnvVariables(state);\n        const value = input.slice(ECHO_LENGTH).replace(/(\\$\\w+)/g, key => {\n            return envVariables[key.slice(1)] || '';\n        });\n        return Object.assign({}, state, {\n            history: state.history.concat({ value }),\n        });\n    },\n};\n\nexport const printenv = {\n    exec: (state) => {\n        const envVariables = Util.getEnvVariables(state);\n        const values = Object.keys(envVariables).map(key => {\n            return { value: `${key}=${envVariables[key]}` };\n        });\n        return Object.assign({}, state, {\n            history: state.history.concat(values),\n        });\n    },\n};\n\nexport const whoami = {\n    exec: (state) => {\n        const value = state.settings.user.username;\n        return Object.assign({}, state, {\n            history: state.history.concat({ value }),\n        });\n    },\n};\n\nexport const hostname = {\n    exec: (state) => {\n        const value = state.settings.user.hostname;\n        return Object.assign({}, state, {\n            history: state.history.concat({ value }),\n        });\n    },\n};\n\nexport const rm = {\n    exec: (state, { flags, args }) => {\n        const path = args[0];\n        const relativePath = path.split('/');\n        const file = relativePath.pop();\n        const fullPath = Util.extractPath(relativePath.join('/'), state.cwd);\n        const deepCopy = JSON.parse(JSON.stringify(state.structure));\n        const { dir } = Util.getDirectoryByPath(deepCopy, fullPath);\n\n        if (dir[file]) {\n            // folder deletion requires the recursive flags `-r` or `-R`\n            if (!Util.isFile(dir[file]) && !(flags.r || flags.R)) {\n                return Util.appendError(state, Errors.IS_A_DIRECTORY, path);\n            }\n            delete dir[file];\n            return Object.assign({}, state, { structure: deepCopy });\n        } else {\n            return Util.appendError(state, Errors.NO_SUCH_FILE, path);\n        }\n    },\n};\n","/*\n * This method parses a single command + args. It handles\n * the tokenization and processing of flags, anonymous args,\n * and named args.\n *\n * @param {string} input - the user input to parse\n * @returns {Object} the parsed command/arg dataf84t56y78ju7y6f\n */\nexport function parseInput(input) {\n    const tokens = input.split(/ +/);\n    const name = tokens.shift();\n    const flags = {};\n    const args = {};\n    let anonArgPos = 0;\n\n    while (tokens.length > 0) {\n        const token = tokens.shift();\n        if (token[0] === '-') {\n            if (token[1] === '-') {\n                const next = tokens.shift();\n                args[token.slice(2)] = next;\n            } else {\n                token.slice(1).split('').forEach(flag => {\n                    flags[flag] = true;\n                });\n            }\n        } else {\n            args[anonArgPos++] = token;\n        }\n    }\n    return { name, flags, input, args };\n}\n\n/*\n * This function splits the input by `&&`` creating a\n * dependency chain. The chain consists of a list of\n * other commands to be run.\n *\n * @param {string} input - the user input\n * @returns {Array} a list of lists of command/arg pairs\n *\n * Example: `cd dir1; cat file.txt && pwd`\n * In this example `pwd` should only be run if dir/file.txt\n * is a readable file. The corresponding response would look\n * like this, where the outer list is the dependent lists..\n *\n * [\n *   [\n *     { command: 'cd', args: { 0: 'dir1'} },\n *     { command: 'cat', args: { 0: 'file.txt'} }\n *   ],\n *   [\n *     { command: 'pwd' }\n *   ]\n * ]\n */\nexport function parse(inputs) {\n    return inputs.trim().split(/ *&& */)\n        .map(deps => deps.split(/ *; */).map(parseInput));\n}","import * as Util from './util';\nimport { Errors } from './const';\nimport * as BaseCommands from './commands';\nimport * as BashParser from './parser';\n\nexport default class Bash {\n\n    constructor(extensions = {}) {\n        this.commands = Object.assign(extensions, BaseCommands);\n        this.prevCommands = [];\n        this.prevCommandsIndex = 0;\n    }\n\n    /*\n     * This parses and executes the given <input> and returns an updated\n     * state object.\n     *\n     * @param {string} input - the user input\n     * @param {Object} state - the current terminal state\n     * @returns {Object} the new terminal state\n     */\n    execute(input, currentState) {\n        this.prevCommands.push(input);\n        this.prevCommandsIndex = this.prevCommands.length;\n\n        // Append input to history\n        const newState = Object.assign({}, currentState, {\n            history: currentState.history.concat({\n                cwd: currentState.cwd,\n                value: input,\n            }),\n        });\n\n        const commandList = BashParser.parse(input);\n        return this.runCommands(commandList, newState);\n    }\n\n    /*\n     * This function executes a list of command lists. The outer list\n     * is a dependency list parsed from the `&&` operator. The inner lists\n     * are groups of commands parsed from the `;` operator. If any given\n     * command fails, the outer list will stop executing.\n     *\n     * @param {Array} commands - the commands to run\n     * @param {Object} state - the terminal state\n     * @returns {Object} the new terminal state\n     */\n    runCommands(commands, state) {\n        let errorOccurred = false;\n\n        /*\n         * This function executes a single command and marks whether an error\n         * occurred. If an error occurs, the following dependent commands should\n         * not be run.\n         */\n        const reducer = (newState, command) => {\n            if (command.name === '') {\n                return newState;\n            } else if (this.commands[command.name]) {\n                const nextState = this.commands[command.name].exec(newState, command, this.commands);\n                errorOccurred = errorOccurred || (nextState && nextState.error);\n                return nextState;\n            } else {\n                errorOccurred = true;\n                return Util.appendError(newState, Errors.COMMAND_NOT_FOUND, command.name);\n            }\n        };\n\n        while (!errorOccurred && commands.length) {\n            const dependentCommands = commands.shift();\n            state = dependentCommands.reduce(reducer, state);\n        }\n        return state;\n    }\n\n    /*\n     * This is a very naive autocomplete method that works for both\n     * commands and directories. If the input contains only one token it\n     * should only suggest commands.\n     *\n     * @param {string} input - the user input\n     * @param {Object} state - the terminal state\n     * @param {Object} state.structure - the file structure\n     * @param {string} state.cwd - the current working directory\n     * @returns {?string} a suggested autocomplete for the <input>\n     */\n    autocomplete(input, { structure, cwd }) {\n        const tokens = input.split(/ +/);\n        let token = tokens.pop();\n        const filter = item => item.indexOf(token) === 0;\n        const result = str => tokens.concat(str).join(' ');\n\n        if (tokens.length === 0) {\n            const suggestions = Object.keys(this.commands).filter(filter);\n            return suggestions.length === 1 ? result(suggestions[0]) : null;\n        } else {\n            const pathList = token.split('/');\n            token = pathList.pop();\n            const partialPath = pathList.join('/');\n            const path = Util.extractPath(partialPath, cwd);\n            const { err, dir } = Util.getDirectoryByPath(structure, path);\n            if (err) return null;\n            const suggestions = Object.keys(dir).filter(filter);\n            const prefix = partialPath ? `${partialPath}/` : '';\n            return suggestions.length === 1 ? result(`${prefix}${suggestions[0]}`) : null;\n        }\n    }\n\n    getPrevCommand() {\n        return this.prevCommands[--this.prevCommandsIndex];\n    }\n\n    getNextCommand() {\n        return this.prevCommands[++this.prevCommandsIndex];\n    }\n\n    hasPrevCommand() {\n        return this.prevCommandsIndex !== 0;\n    }\n\n    hasNextCommand() {\n        return this.prevCommandsIndex !== this.prevCommands.length - 1;\n    }\n\n}","const BaseStyles = {};\n\nBaseStyles.main = {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: '\\'Inconsolata\\', monospace',\n    fontSize: '13px',\n    fontWeight: '400',\n    overflow: 'hidden',\n    textAlign: 'left',\n    height: '100vh',\n    cursor: 'default',\n    userSelect: 'none',\n    width: '100vw'\n};\n\nBaseStyles.body = {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: '10px',\n    transition: 'background-color .5s',\n    paddingRight: '70px'\n};\n\nBaseStyles.form = {\n    display: 'flex',\n};\n\nBaseStyles.input = {\n    background: 'none',\n    border: 'none',\n    color: 'inherit',\n    flexGrow: '1',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    outline: 'none !important',\n    padding: 0,\n    cursor: 'default',\n    appearance: 'none',\n    marginLeft: '5px'\n};\n\nBaseStyles.prefix = {\n    cursor: 'default',\n};\n\nBaseStyles.output = {\n    whiteSpace: 'pre-wrap'\n};\n\nBaseStyles.inner_output = {\n    marginLeft: '5px'\n};\n\nconst styles = {\n    light: Object.assign({}, BaseStyles, {\n        body: Object.assign({}, BaseStyles.body, {\n            backgroundColor: '#fff',\n            color: '#5D5D5D',\n        }),\n        header: Object.assign({}, BaseStyles.header, {\n            backgroundColor: '#eee',\n        }),\n        prefix: Object.assign({}, BaseStyles.prefix, {\n            color: '#5b65fb',\n        }),\n    }),\n    dark: Object.assign({}, BaseStyles, {\n        body: Object.assign({}, BaseStyles.body, {\n            backgroundColor: '#000',\n            color: '#d0d0d0',\n        }),\n        header: Object.assign({}, BaseStyles.header, {\n            backgroundColor: '#dcdbdb',\n        }),\n        prefix: Object.assign({}, BaseStyles.prefix, {\n            color: '#16a130',\n        }),\n    }),\n};\n\nexport default styles;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Bash from './bash';\nimport Styles from './styles';\nimport './index.css'\n\nconst CTRL_CHAR_CODE = 17;\nconst L_CHAR_CODE = 76;\nconst C_CHAR_CODE = 67;\nconst UP_CHAR_CODE = 38;\nconst DOWN_CHAR_CODE = 40;\nconst TAB_CHAR_CODE = 9;\nconst noop = () => {};\n\nexport default class Terminal extends Component {\n\n    constructor({ history, structure, extensions, prefix, home }) {\n        super();\n        this.Bash = new Bash(extensions);\n        this.ctrlPressed = false;\n        this.state = {\n            settings: { user: { username: prefix.split('@')[0], hostname: prefix.split('@')[1] } },\n            history: history.slice(),\n            structure: Object.assign({}, structure),\n            cwd: home ? home.slice(1) : '',\n            home: home ? home : '/',\n        };\n        this.home=home ? home : '/';\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n    }\n\n    componentDidMount() {\n        this.refs.input.focus();\n    }\n\n    // componentWillReceiveProps({ extensions, structure, history }) {\n    //     const updatedState = {};\n    //     if (structure) {\n    //         updatedState.structure = Object.assign({}, structure);\n    //     }\n    //     if (history) {\n    //         updatedState.history = history.slice();\n    //     }\n    //     if (extensions) {\n    //         this.Bash.commands = Object.assign({}, extensions, BaseCommands);\n    //     }\n    //     this.setState(updatedState);\n    // }\n\n    /*\n     * Utilize immutability\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        return (this.state !== nextState) || (this.props !== nextProps);\n    }\n\n    /*\n     * Keep input in view on change\n     */\n    componentDidUpdate() {\n        this.refs.input.scrollIntoView();\n    }\n\n    /*\n     * Forward the input along to the Bash autocompleter. If it works,\n     * update the input.\n     */\n    attemptAutocomplete() {\n        const input = this.refs.input.value;\n        const suggestion = this.Bash.autocomplete(input, this.state);\n        if (suggestion) {\n            this.refs.input.value = suggestion;\n        }\n    }\n\n    /*\n     * Handle keydown for special hot keys. The tab key\n     * has to be handled on key down to prevent default.\n     * @param {Event} evt - the DOM event\n     */\n    handleKeyDown(evt) {\n        if (evt.which === CTRL_CHAR_CODE) {\n            this.ctrlPressed = true;\n        } else if (evt.which === TAB_CHAR_CODE) {\n            // Tab must be on keydown to prevent default\n            this.attemptAutocomplete();\n            evt.preventDefault();\n        }\n    }\n\n    /*\n     * Handle keyup for special hot keys.\n     * @param {Event} evt - the DOM event\n     *\n     * -- Supported hot keys --\n     * ctrl + l : clear\n     * ctrl + c : cancel current command\n     * up - prev command from history\n     * down - next command from history\n     * tab - autocomplete\n     */\n    handleKeyUp(evt) {\n        if (evt.which === L_CHAR_CODE) {\n            if (this.ctrlPressed) {\n                this.setState(this.Bash.execute('clear', this.state));\n            }\n        } else if (evt.which === C_CHAR_CODE) {\n            if (this.ctrlPressed) {\n                this.setState({\n                    ...this.state,\n                    history: this.state.history.concat({\n                        value: this.refs.input.value + '^C',\n                        cwd: this.state.cwd\n                    })\n                })\n                this.refs.input.value = '';\n            }\n        } else if (evt.which === UP_CHAR_CODE) {\n            if (this.Bash.hasPrevCommand()) {\n                this.refs.input.value = this.Bash.getPrevCommand();\n            }\n        } else if (evt.which === DOWN_CHAR_CODE) {\n            if (this.Bash.hasNextCommand()) {\n                this.refs.input.value = this.Bash.getNextCommand();\n            } else {\n                this.refs.input.value = '';\n            }\n        } else if (evt.which === CTRL_CHAR_CODE) {\n            this.ctrlPressed = false;\n        }\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        // Execute command\n        const input = evt.target[0].value;\n        const newState = this.Bash.execute(input, this.state);\n        this.setState(newState);\n        this.refs.input.value = '';\n    }\n\n    getPath(path) {\n        if (this.home) return path.replace(this.home, '~')\n        else return path\n    }\n\n    getPrefixComponent(cwd) {\n        const { styles, theme } = this.props;\n        const style = Object.assign({}, Styles[theme] || Styles.light, styles);\n\n        return <span><span style={style.prefix}>{`${this.props.prefix}:${this.getPath(`/${cwd}`)}`}</span> $</span>\n    }\n\n    renderHistoryItem() {\n        const { styles, theme } = this.props;\n        const style = Object.assign({}, Styles[theme] || Styles.light, styles);\n\n        return (item, key) => {\n            const prefix = item.hasOwnProperty('cwd') ? \n                this.getPrefixComponent(item.cwd)\n            :\n                undefined;\n\n            return <div style={style.output} data-test-id={`history-${key}`} key={key} >\n                {prefix}\n                {item.value ? <span style={prefix && style.inner_output}>{item.value}</span> : <br/>}\n            </div>;\n        };\n    }\n\n    render() {\n        const { styles, theme } = this.props;\n        const { history, cwd } = this.state;\n        const style = Object.assign({}, Styles[theme] || Styles.light, styles);\n\n        return (\n            <div style={style.main}>\n                <div\n                    style={style.body}\n                    onClick={() => this.refs.input.focus()}\n                    onContextMenu={(e) => {\n                        e.preventDefault();\n                        navigator.clipboard.readText().then(text => this.refs.input.value = this.refs.input.value + text)\n                        this.refs.input.focus();\n                    }}\n                >\n                    {history.map(this.renderHistoryItem())}\n                    <form onSubmit={evt => this.handleSubmit(evt)} style={style.form}>\n                        {this.getPrefixComponent(cwd)}\n                        <input\n                          autoComplete=\"off\"\n                          onKeyDown={this.handleKeyDown}\n                          onKeyUp={this.handleKeyUp}\n                          ref=\"input\"\n                          id=\"input\"\n                          style={style.input}\n                        />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nTerminal.Themes = {\n    LIGHT: 'light',\n    DARK: 'dark',\n};\n\nTerminal.propTypes = {\n    extensions: PropTypes.object,\n    history: PropTypes.array,\n    onClose: PropTypes.func,\n    onExpand: PropTypes.func,\n    onMinimize: PropTypes.func,\n    prefix: PropTypes.string,\n    structure: PropTypes.object,\n    styles: PropTypes.object,\n    theme: PropTypes.string,\n};\n\nTerminal.defaultProps = {\n    extensions: {},\n    history: [],\n    onClose: noop,\n    onExpand: noop,\n    onMinimize: noop,\n    prefix: 'hacker@default',\n    structure: {},\n    styles: {},\n    theme: Terminal.Themes.LIGHT,\n};","import ReactBash from './component';\nimport * as BashUtil from './util';\nimport * as BashConst from './const';\n\n\nexport default ReactBash;\n\nexport {\n    BashConst,\n    BashUtil,\n};","import summary from '../files/jobs/summary'\nimport main from '../files/README.md';\n\nexport const structure = {\n    'bin': {\n        'bash': { binary: true},\n    },\n    'home': {\n        'guest': {\n            '.bashrc': { content: 'export PATH=$PATH:/home/guest' },\n            'jobs': {\n                'summary.out': { content: summary }\n            },\n            'README.md': {content: main},\n        }\n    },\n    'mnt': {},\n    'usr': {\n        'bin': {\n            'cat': { binary: true},\n            'ls': { binary: true},\n        }\n    },\n    'var': {\n        'log': {}\n    }\n};\n","export default (\n`\nasd\nasd\nasd\nasd\nasd\nasd\n\n \nternium\n\n\n\nasd\nasd\nasd\n`\n);\n","export default (\n`# Welcome \n\n👋 Hi! My name is Maximiliano Aguirre and this is a fun rework of mi CV.\n\nIf you were able to print this, you are probably familiar with bash interface. This is by no means a bash app running somehow in the javascript environment of the browser, but a cheap emulator of it in javascript done just for fun and as a different way of presenting my CV.\n\nReading my CV from here should be an enjoyable activity for anyone used to use a terminal, but you are free to download a PDF version of my CV either by running 'open pdf' or by using the PDF button on the top right of the screen.\n\n`\n)\n","import { getDirectoryByPath, extractPath, appendError } from \"../components/bash/util\";\nimport * as Util from '../components/bash/util';\nimport { Errors } from '../components/bash/const';\n\nexport const initial_history = [\n    { value: 'Welcome to Maxi\\'s bash CV.' },\n    { value: 'Type help to see available commands.' },\n    { value: 'Check the README.md file in the home for more info.' },\n    { value: '' },\n];\n\nconst help = `Available commands\n\nHelp:\n  man      Prints command help\n  help     Prints this text\n\nSystem:\n  whoami   Prints username\n  hostname Prints the hostname\n  printenv Prints environment variables\n  date     Prints current datetime\n  echo     Prints to stdout\n\nNavigation:\n  ls       List files\n  cd       Changes current working directory\n  mkdir    Creates a directory\n  rm       Removes a file or directory\n  tree     Prints file structure\n  clear    Clear stdout\n  cat      Prints file content\n  pwd      Prints current working directory\n\nOther:\n  open     Open resource\n\nSpells:\n  lumos    Cast lumos spell\n  nox      Cast nox spell\n`\n\nconst open_man = `Usage: open [resources]\n\n  Open external resources\n\nResources:\n  github     Opens personal github account\n  linkedin   Opens personal linkedin account\n`\n\nexport const extensions = {\n    help: {\n        exec: ({ structure, history, cwd }) => {\n            const lines = help.split('\\n').map(value=>({value}))\n            return { structure, cwd,\n                history: history.concat(lines),\n            };\n        },\n    },\n    // randomjoke: {\n    //     exec: async ({ structure, history, cwd }) => {\n    //         const response = await fetch(\"https://icanhazdadjoke.com/\", { headers: { 'Accept': 'application/json' } })\n    //         const joke = await response.json()\n\n    //         console.log(joke.joke)\n\n    //         return { structure, cwd, history: history.concat({ value: joke.joke }) };\n    //     },\n    // },\n    man: {\n        exec: (state, {args}, commands) => {\n            const command = args[0] || '';\n            const { structure, history, cwd } = state\n\n            if (!command) return commands[\"man\"].exec({ structure, history, cwd }, { args: {0: \"man\"} }, commands)\n            if (!Object.keys(commands).includes(command)) return Util.appendError(state, Errors.COMMAND_NOT_FOUND, command);\n            if (!commands[command][\"man\"]) return  { ...state, history: state.history.concat({value: `No manual available for ${command}`})};\n\n            const lines = commands[command][\"man\"].split('\\n').map(value=>({value}))\n            return { ...state, history: state.history.concat(lines)};\n        },\n        man: `Usage: man [command]\n\n  Prints manual for specified command`\n    },\n    date: {\n        exec: ({ structure, history, cwd }) => {\n            const date = new Date();\n            return { structure, cwd, history: history.concat({ value: date.toUTCString() }) };\n        },\n        man: `Usage: date\n\n  Print current datetime`\n    },\n    sudo: {\n        exec: ({ structure, history, cwd }) => {\n            console.log(test)\n            return { structure, cwd,\n                history: history.concat({ value: 'Access denied.' }),\n            };\n        },\n        man: `Usage: sudo [command]\n\n  Execute command as root`\n    },\n    open: {\n        exec: ({ structure, history, cwd }, { args }, commands) => {\n            const resource = args[0] || '';\n\n            if (!([\"github\", \"linkedin\", \"pdf\"].includes(resource))) return commands[\"man\"].exec({ structure, history, cwd }, { args: {0: \"open\"} }, commands)\n\n            const resources = {\n                github: \"https://github.com/MaximilianoAguirre\",\n                linkedin: \"https://www.linkedin.com/in/maximilianoaguirre/\",\n                pdf: \"\"\n            }\n\n            window.open(resources[resource], '_blank').focus();\n\n            return { structure, cwd, history: history.concat({ value: `Opening ${resource}...` })};\n        },\n        man: open_man\n    },\n    clear: {\n        exec: ({ structure, history, cwd }) => {\n            return { structure, cwd, history: initial_history };\n        },\n        man: `Usage: clear\n\n  Clear stdout`\n    },\n    tree: {\n        exec: (state, { args }) => {\n            const path = args[0] || '';\n            const fullPath = extractPath(path, state.cwd);\n            const { err, dir } = getDirectoryByPath(state.structure, fullPath);\n\n            if (err) return appendError(state, err, path)\n\n            const convert = (dir) => {\n                const keys = Object.keys(dir)\n\n                return keys.map(key => {\n                    const response = {}\n\n                    response['key'] = key\n                    if (!('content' in dir[key]) && !('binary' in dir[key]) && Object.keys(dir[key]).length > 0) response['children'] = convert(dir[key])\n\n                    return response\n                })\n            }\n\n            const walk = (tree) => {\n                var indent = 1;\n\n                function innerWalk(tree) {\n                    tree.forEach(function(node) {\n                        state.history = state.history.concat({value: `${'--' + Array(indent).join('--')} ${node.key}`})\n\n                        if(node.children) {\n                            indent ++;\n                            innerWalk(node.children);\n                        }\n                        if(tree.indexOf(node) === tree.length - 1) {\n                            indent--;\n                        }\n                    })\n                }\n\n                innerWalk(tree);\n            }\n\n            walk(convert(dir))\n\n            return state\n        },\n        man: `Usage: tree [dir]\n\n  Prints a tree representation of the directory structure starting on DIR. Current directory is used if no DIR is provided.`\n    }\n};\n","export default __webpack_public_path__ + \"static/media/cv.3ba58ef7.pdf\";","import { FaGithub, FaLinkedinIn } from 'react-icons/fa';\nimport { FiMail } from 'react-icons/fi';\nimport { GrDocumentPdf } from 'react-icons/gr';\n\nimport cv from '../docs/cv.pdf'\n\nexport const FloatingButtons = ({baseStyle}) => {\n    return <>\n        <a\n            className=\"float-button\"\n            href=\"https://github.com/MaximilianoAguirre\"\n            target=\"_blank\"\n            rel='noreferrer'\n            style={{\n                ...baseStyle,\n                top: \"20px\"\n            }}\n        >\n            <FaGithub className='float-icon' />\n        </a>\n\n        <a\n            className=\"float-button\"\n            href=\"https://www.linkedin.com/in/maximilianoaguirre/\"\n            rel='noreferrer'\n            target=\"_blank\"\n            style={{\n                ...baseStyle,\n                top: \"70px\"\n            }}\n        >\n            <FaLinkedinIn className='float-icon' />\n        </a>\n\n        <a\n            className=\"float-button\"\n            href=\"mailto:maximiliano.aguirre@outlook.es\"\n            rel='noreferrer'\n            target=\"_blank\"\n            style={{\n                ...baseStyle,\n                top: \"120px\"\n            }}\n        >\n            <FiMail className='float-icon' />\n        </a>\n\n        <a\n            className=\"float-button\"\n            href={cv}\n            download={'Maximiliano Aguirre.pdf'}\n            rel='noreferrer'\n            target=\"_blank\"\n            style={{\n                ...baseStyle,\n                top: \"170px\"\n            }}\n        >\n            <GrDocumentPdf className='float-icon' />\n        </a>\n    </>\n}\n","import { useState } from 'react';\n\nimport Terminal from './components/bash/index';\nimport styles from './components/bash/styles';\n\nimport \"./css/floating_button.css\"\n\nimport { structure } from './conf/structure';\nimport { extensions, initial_history } from './conf/extensions';\n\nimport { FloatingButtons } from \"./components/FloatingButtons\"\n\nfunction App() {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const extra_extensions = {\n    lumos: {\n      exec: (state) => {\n        setTheme(\"light\")\n        return state\n      },\n      man: `Usage: lumos\n\n  Casts 'lumos' spell!`\n    },\n    nox: {\n      exec: (state) => {\n        setTheme(\"dark\")\n        return state\n      },\n      man: `Usage: nox\n\n  Casts 'nox' spell!`\n    }\n  }\n\n  return (\n    <>\n      <Terminal\n        history={initial_history}\n        extensions={{...extensions, ...extra_extensions}}\n        structure={structure}\n        theme={theme}\n        prefix=\"guest@pc-maxi\"\n        home=\"/home/guest\"\n      />\n\n      <FloatingButtons\n        baseStyle={{\n          backgroundColor: styles[theme].body.color,\n          color: styles[theme].body.backgroundColor,\n        }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/reset.css';\nimport './css/custom_scrollbar.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}