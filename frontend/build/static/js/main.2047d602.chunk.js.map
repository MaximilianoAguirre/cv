{"version":3,"sources":["components/bash/const.js","components/bash/util.js","components/bash/commands.js","components/bash/parser.js","components/bash/bash.js","components/bash/styles.js","components/bash/component.js","components/bash/index.js","conf/structure.js","files/main.js","files/jobs/summary.js","conf/extensions.js","docs/cv.pdf","components/FloatingButton.js","App.js","reportWebVitals.js","index.js"],"names":["IS_SERVER","window","BACK_REGEX","Errors","COMMAND_NOT_FOUND","FILE_EXISTS","NO_SUCH_FILE","NOT_A_DIRECTORY","IS_A_DIRECTORY","IS_BINARY","EnvVariables","SHELL","USER","state","settings","user","username","PATH","home","PWD","cwd","LANG","navigator","language","replace","HOME","LOGNAME","OLDPWD","trim","str","char","substr","length","appendError","error","command","Object","assign","history","concat","value","extractPath","relativePath","rootPath","path","match","getDirectoryByPath","structure","split","dir","i","child","err","hasOwnProperty","getEnvVariables","keys","reduce","envVars","key","helpCommands","help","exec","map","ls","flags","args","fullPath","Util","content","a","unshift","filter","name","l","join","cat","fileName","pop","lines","mkdir","newDirectory","deepCopy","JSON","parse","stringify","cd","envVariables","slice","pwd","directory","echo","input","ECHO_LENGTH","printenv","values","whoami","hostname","rm","file","undefined","r","R","parseInput","tokens","shift","anonArgPos","token","next","forEach","flag","Bash","extensions","this","commands","BaseCommands","prevCommands","prevCommandsIndex","currentState","push","newState","commandList","deps","runCommands","errorOccurred","reducer","nextState","item","indexOf","result","suggestions","pathList","partialPath","prefix","BaseStyles","display","flexDirection","fontFamily","fontSize","fontWeight","overflow","textAlign","height","cursor","userSelect","flexGrow","overflowY","padding","transition","background","border","color","outline","appearance","marginRight","styles","light","body","backgroundColor","header","dark","noop","Terminal","ctrlPressed","handleKeyDown","bind","handleKeyUp","refs","focus","nextProps","props","scrollIntoView","suggestion","autocomplete","evt","which","attemptAutocomplete","preventDefault","setState","execute","hasPrevCommand","getPrevCommand","hasNextCommand","getNextCommand","target","style","getPath","data-test-id","theme","Styles","main","onClick","onContextMenu","e","clipboard","readText","then","text","renderHistoryItem","onSubmit","handleSubmit","form","autoComplete","onKeyDown","onKeyUp","ref","id","Component","Themes","LIGHT","DARK","defaultProps","onClose","onExpand","onMinimize","ReactBash","binary","initial_history","sudo","github","open","linkedin","clear","tree","indent","innerWalk","node","Array","children","walk","convert","response","FloatingButtons","setTheme","baseStyle","href","className","top","rel","cv","download","App","useState","extra_extensions","lumos","nox","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"osBAAaA,EAA8B,qBAAXC,OAEnBC,EAAa,sBAEbC,EAAS,CAClBC,kBAAmB,+BACnBC,YAAa,yBACbC,aAAc,uCACdC,gBAAiB,6BACjBC,eAAgB,0BAChBC,UAAW,6BAGFC,EAAe,CACxBC,MAAM,YACNC,KAAM,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAKC,UACnCC,KAAM,SAAAJ,GAAK,8BAAqBA,EAAMK,OACtCC,IAAK,SAAAN,GAAK,iBAAQA,EAAMO,MACxBC,KAAM,WACF,OAAQrB,EAA8D,cAA/D,UAAgBsB,UAAUC,SAASC,QAAQ,IAAK,KAAhD,WAEXC,KAAM,SAAAZ,GAAK,OAAIA,EAAMK,MACrBQ,QAAS,SAAAb,GAAK,OAAIA,EAAMC,SAASC,KAAKC,UACtCW,OAAQ,KCbL,SAASC,EAAKC,EAAKC,GAOtB,OANID,EAAI,KAAOC,IACXD,EAAMA,EAAIE,OAAO,IAEjBF,EAAIA,EAAIG,OAAS,KAAOF,IACxBD,EAAMA,EAAIE,OAAO,EAAGF,EAAIG,OAAS,IAE9BH,EAYJ,SAASI,EAAYpB,EAAOqB,EAAOC,GACtC,OAAOC,OAAOC,OAAO,GAAIxB,EAAO,CAC5BqB,OAAO,EACPI,QAASzB,EAAMyB,QAAQC,OAAO,CAC1BC,MAAON,EAAMV,QAAQ,KAAMW,OAahC,SAASM,EAAYC,EAAcC,GAEtC,GAAqB,KAAjBD,EAAqB,OAAOC,EAGhCD,EAAed,EAAKc,EAAc,KAMlC,IAHA,IAAIE,EAAI,UAAMD,EAAWA,EAAW,IAAM,IAAlC,OAAuCD,GAGxCE,EAAKC,MAAM3C,IACd0C,EAAOA,EAAKpB,QAAQtB,EAAY,IAEpC,OAAO0B,EAAKgB,EAAM,KAWf,SAASE,EAAmBC,EAAWL,GAC1C,IAAME,EAAOF,EAAaM,MAAM,KAGhC,IAAKJ,EAAK,GAAI,MAAO,CAAEK,IAAKF,GAI5B,IAFA,IAAIE,EAAMF,EACNG,EAAI,EACDA,EAAIN,EAAKZ,QAAQ,CACpB,IACMmB,EAAQF,EADFL,EAAKM,IAEjB,IAAIC,GAA0B,kBAAVA,EAOhB,MAAO,CAAEC,IAAKjD,EAAOG,aAAakB,QAAQ,KAAMkB,IANhD,GAAIS,EAAME,eAAe,WACrB,MAAO,CAAED,IAAKjD,EAAOI,gBAAgBiB,QAAQ,KAAMkB,IAEnDO,EAAME,EAKdD,IAEJ,MAAO,CAAED,OAUN,SAASK,EAAgBzC,GAC5B,OAAOuB,OAAOmB,KAAK7C,GAAc8C,QAAO,SAACC,EAASC,GAC9C,IAAMlB,EAAQ9B,EAAagD,GAE3B,OADAD,EAAQC,GAAwB,oBAAVlB,EAAuBA,EAAM3B,GAAS2B,EACrDiB,IACR,ICzGP,IAAME,EAAe,CAAC,QAAS,KAAM,MAAO,QAAS,KAAM,MAAO,OAAQ,WAAY,SAAU,KAAM,WAAY,OAAQ,SAAU,YAEvHC,EAAO,CAChBC,KAAM,SAAChD,GAAW,IAAD,EACb,OAAOuB,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,SAAS,EAAAzB,EAAMyB,SAAQC,OAAd,SACL,CAAEC,MAAO,wBADJ,mBAEFmB,EAAaG,KAAI,SAAAtB,GAAK,MAAK,CAAEA,mBAMnCuB,EAAK,CACdF,KAAM,SAAChD,EAAD,GAA6B,IAAnBmD,EAAkB,EAAlBA,MACNpB,EADwB,EAAXqB,KACD,IAAM,GAClBC,EAAWC,EAAiBvB,EAAM/B,EAAMO,KAFhB,EAGT+C,EAAwBtD,EAAMkC,UAAWmB,GAAtDd,EAHsB,EAGtBA,IAAKH,EAHiB,EAGjBA,IAEb,GAAIG,EACA,OAAOe,EAAiBtD,EAAOuC,EAAKR,GAEpC,IAAIwB,EAAUhC,OAAOmB,KAAKN,GAQ1B,OAPKe,EAAMK,GAIPD,EAAQE,QAAQ,MAChBF,EAAQE,QAAQ,MAJhBF,EAAUA,EAAQG,QAAO,SAAAC,GAAI,MAAgB,MAAZA,EAAK,MAMtCR,EAAMS,EACCrC,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAO6B,EAAQN,KAAI,SAAAtB,GACtC,MAAO,CAAEA,eAIVJ,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAO,CAAEC,MAAO4B,EAAQM,KAAK,WAO3DC,EAAM,CACfd,KAAM,SAAChD,EAAD,GAAsB,IAClB+B,EADiB,EAAXqB,KACM,GACZvB,EAAeE,EAAKI,MAAM,KAC1B4B,EAAWlC,EAAamC,MACxBX,EAAWC,EAAiBzB,EAAagC,KAAK,KAAM7D,EAAMO,KAJzC,EAKF+C,EAAwBtD,EAAMkC,UAAWmB,GAAtDd,EALe,EAKfA,IAAKH,EALU,EAKVA,IACb,GAAIG,EACA,OAAOe,EAAiBtD,EAAOuC,EAAKR,GACjC,GAAKK,EAAI2B,GAET,IAAI3B,EAAI2B,GAAUvB,eAAe,UACpC,OAAOc,EAAiBtD,EAAOV,EAAOM,UAAWmC,GAC9C,GAAKK,EAAI2B,GAAUvB,eAAe,WAElC,CACH,IACMyB,EADU7B,EAAI2B,GAAUR,QAAQ5C,QAAQ,MAAO,IAC/BwB,MAAM,MAAMc,KAAI,SAAAtB,GAAK,MAAK,CAAEA,YAClD,OAAOJ,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAOuC,KALlC,OAAOX,EAAiBtD,EAAOV,EAAOK,eAAgBoC,GAJtD,OAAOuB,EAAiBtD,EAAOV,EAAOG,aAAcsC,KAenDmC,EAAQ,CACjBlB,KAAM,SAAChD,EAAD,GAAsB,IAClB+B,EADiB,EAAXqB,KACM,GACZvB,EAAeE,EAAKI,MAAM,KAC1BgC,EAAetC,EAAamC,MAC5BX,EAAWC,EAAiBzB,EAAagC,KAAK,KAAM7D,EAAMO,KAC1D6D,EAAWC,KAAKC,MAAMD,KAAKE,UAAUvE,EAAMkC,YACzCE,EAAQkB,EAAwBc,EAAUf,GAA1CjB,IAER,OAAIA,EAAI+B,GACGb,EAAiBtD,EAAOV,EAAOE,YAAauC,IAEnDK,EAAI+B,GAAgB,GACb5C,OAAOC,OAAO,GAAIxB,EAAO,CAAEkC,UAAWkC,OAK5CI,EAAK,CACdxB,KAAM,SAAChD,EAAD,GAAsB,IAClB+B,EADiB,EAAXqB,KACM,GACZqB,EAAenB,EAAqBtD,GAE1C,IAAK+B,EAAM,OAAOR,OAAOC,OAAO,GAAIxB,EAAO,CAAEO,IAA2B,MAAtBkE,EAAa7D,KAAe6D,EAAa7D,KAAK8D,MAAM,GAAKD,EAAa7D,OACxH,GAAa,MAATmB,EAAc,OAAOR,OAAOC,OAAO,GAAIxB,EAAO,CAAEO,IAAK,KAGzD,IAAM8C,EAAWC,EAAiBvB,EAAM/B,EAAMO,KACtCgC,EAAQe,EAAwBtD,EAAMkC,UAAWmB,GAAjDd,IAER,OAAIA,EACOe,EAAiBtD,EAAOuC,EAAKR,GAE7BR,OAAOC,OAAO,GAAIxB,EAAO,CAAEO,IAAK8C,MAKtCsB,EAAM,CACf3B,KAAM,SAAChD,GACH,IAAM4E,EAAS,WAAO5E,EAAMO,KAC5B,OAAOgB,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAO,CAAEC,MAAOiD,QAKtCC,EAAO,CAChB7B,KAAM,SAAChD,EAAD,GAAuB,IAAb8E,EAAY,EAAZA,MACNC,EAAc,QAAQ5D,OACtBsD,EAAenB,EAAqBtD,GACpC2B,EAAQmD,EAAMJ,MAAMK,GAAapE,QAAQ,YAAY,SAAAkC,GACvD,OAAO4B,EAAa5B,EAAI6B,MAAM,KAAO,MAEzC,OAAOnD,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAO,CAAEC,cAK/BqD,EAAW,CACpBhC,KAAM,SAAChD,GACH,IAAMyE,EAAenB,EAAqBtD,GACpCiF,EAAS1D,OAAOmB,KAAK+B,GAAcxB,KAAI,SAAAJ,GACzC,MAAO,CAAElB,MAAM,GAAD,OAAKkB,EAAL,YAAY4B,EAAa5B,QAE3C,OAAOtB,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAOuD,OAK7BC,EAAS,CAClBlC,KAAM,SAAChD,GACH,IAAM2B,EAAQ3B,EAAMC,SAASC,KAAKC,SAClC,OAAOoB,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAO,CAAEC,cAK/BwD,EAAW,CACpBnC,KAAM,SAAChD,GACH,IAAM2B,EAAQ3B,EAAMC,SAASC,KAAKiF,SAClC,OAAO5D,OAAOC,OAAO,GAAIxB,EAAO,CAC5ByB,QAASzB,EAAMyB,QAAQC,OAAO,CAAEC,cAK/ByD,EAAK,CACdpC,KAAM,SAAChD,EAAD,GAA6B,IAAnBmD,EAAkB,EAAlBA,MACNpB,EADwB,EAAXqB,KACD,GACZvB,EAAeE,EAAKI,MAAM,KAC1BkD,EAAOxD,EAAamC,MACpBX,EAAWC,EAAiBzB,EAAagC,KAAK,KAAM7D,EAAMO,KAC1D6D,EAAWC,KAAKC,MAAMD,KAAKE,UAAUvE,EAAMkC,YACzCE,EAAQkB,EAAwBc,EAAUf,GAA1CjB,IAER,OAAIA,EAAIiD,QDrDaC,ICuDAlD,EAAIiD,GDvDhB9B,SCuD4BJ,EAAMoC,GAAKpC,EAAMqC,UAG3CpD,EAAIiD,GACJ9D,OAAOC,OAAO,GAAIxB,EAAO,CAAEkC,UAAWkC,KAHlCd,EAAiBtD,EAAOV,EAAOK,eAAgBoC,GAKnDuB,EAAiBtD,EAAOV,EAAOG,aAAcsC,KC5KzD,SAAS0D,EAAWX,GAOvB,IANA,IAAMY,EAASZ,EAAM3C,MAAM,MACrBwB,EAAO+B,EAAOC,QACdxC,EAAQ,GACRC,EAAO,GACTwC,EAAa,EAEVF,EAAOvE,OAAS,GAAG,CACtB,IAAM0E,EAAQH,EAAOC,QACrB,GAAiB,MAAbE,EAAM,GACN,GAAiB,MAAbA,EAAM,GAAY,CAClB,IAAMC,EAAOJ,EAAOC,QACpBvC,EAAKyC,EAAMnB,MAAM,IAAMoB,OAEvBD,EAAMnB,MAAM,GAAGvC,MAAM,IAAI4D,SAAQ,SAAAC,GAC7B7C,EAAM6C,IAAQ,UAItB5C,EAAKwC,KAAgBC,EAG7B,MAAO,CAAElC,OAAMR,QAAO2B,QAAO1B,Q,ICzBZ6C,E,WAEjB,aAA8B,IAAlBC,EAAiB,uDAAJ,GAAI,oBACzBC,KAAKC,SAAW7E,OAAOC,OAAO0E,EAAYG,GAC1CF,KAAKG,aAAe,GACpBH,KAAKI,kBAAoB,E,2CAW7B,SAAQzB,EAAO0B,GACXL,KAAKG,aAAaG,KAAK3B,GACvBqB,KAAKI,kBAAoBJ,KAAKG,aAAanF,OAG3C,IAAMuF,EAAWnF,OAAOC,OAAO,GAAIgF,EAAc,CAC7C/E,QAAS+E,EAAa/E,QAAQC,OAAO,CACjCnB,IAAKiG,EAAajG,IAClBoB,MAAOmD,MAIT6B,EAA+B7B,EDwB3B/D,OAAOoB,MAAM,UACtBc,KAAI,SAAA2D,GAAI,OAAIA,EAAKzE,MAAM,SAASc,IAAIwC,MCxBrC,OAAOU,KAAKU,YAAYF,EAAaD,K,yBAazC,SAAYN,EAAUpG,GAqBlB,IArB0B,IAAD,OACrB8G,GAAgB,EAOdC,EAAU,SAACL,EAAUpF,GACvB,GAAqB,KAAjBA,EAAQqC,KACR,OAAO+C,EACJ,GAAI,EAAKN,SAAS9E,EAAQqC,MAAO,CACpC,IAAMqD,EAAY,EAAKZ,SAAS9E,EAAQqC,MAAMX,KAAK0D,EAAUpF,GAE7D,OADAwF,EAAgBA,GAAkBE,GAAaA,EAAU3F,MAClD2F,EAGP,OADAF,GAAgB,EACTxD,EAAiBoD,EAAUpH,EAAOC,kBAAmB+B,EAAQqC,QAIpEmD,GAAiBV,EAASjF,QAAQ,CAEtCnB,EAD0BoG,EAAST,QACThD,OAAOoE,EAAS/G,GAE9C,OAAOA,I,0BAcX,SAAa8E,EAAb,GAAyC,IAAnB5C,EAAkB,EAAlBA,UAAW3B,EAAO,EAAPA,IACvBmF,EAASZ,EAAM3C,MAAM,MACvB0D,EAAQH,EAAO1B,MACbN,EAAS,SAAAuD,GAAI,OAA4B,IAAxBA,EAAKC,QAAQrB,IAC9BsB,EAAS,SAAAnG,GAAG,OAAI0E,EAAOhE,OAAOV,GAAK6C,KAAK,MAE9C,GAAsB,IAAlB6B,EAAOvE,OAAc,CACrB,IAAMiG,EAAc7F,OAAOmB,KAAKyD,KAAKC,UAAU1C,OAAOA,GACtD,OAA8B,IAAvB0D,EAAYjG,OAAegG,EAAOC,EAAY,IAAM,KAE3D,IAAMC,EAAWxB,EAAM1D,MAAM,KAC7B0D,EAAQwB,EAASrD,MACjB,IAAMsD,EAAcD,EAASxD,KAAK,KAH/B,EAKkBP,EAAwBpB,EADhCoB,EAAiBgE,EAAa/G,IACnCgC,EALL,EAKKA,IAAKH,EALV,EAKUA,IACb,GAAIG,EAAK,OAAO,KAChB,IAAM6E,EAAc7F,OAAOmB,KAAKN,GAAKsB,OAAOA,GACtC6D,EAASD,EAAW,UAAMA,EAAN,KAAuB,GACjD,OAA8B,IAAvBF,EAAYjG,OAAegG,EAAO,GAAD,OAAII,GAAJ,OAAaH,EAAY,KAAQ,O,4BAIjF,WACI,OAAOjB,KAAKG,eAAeH,KAAKI,qB,4BAGpC,WACI,OAAOJ,KAAKG,eAAeH,KAAKI,qB,4BAGpC,WACI,OAAkC,IAA3BJ,KAAKI,oB,4BAGhB,WACI,OAAOJ,KAAKI,oBAAsBJ,KAAKG,aAAanF,OAAS,M,KCzH/DqG,EAAa,CAEnBA,KAAkB,CACdC,QAAS,OACTC,cAAe,SACfC,WAAY,2BACZC,SAAU,OACVC,WAAY,MACZC,SAAU,SACVC,UAAW,OACXC,OAAQ,QACRC,OAAQ,UACRC,WAAY,QAGhBV,KAAkB,CACdW,SAAU,EACVC,UAAW,OACXC,QAAS,OACTC,WAAY,wBAGhBd,KAAkB,CACdC,QAAS,QAGbD,MAAmB,CACfe,WAAY,OACZC,OAAQ,OACRC,MAAO,UACPN,SAAU,IACVR,WAAY,UACZC,SAAU,UACVc,QAAS,kBACTL,QAAS,EACTJ,OAAQ,UACRU,WAAY,QAGhBnB,OAAoB,CAChBoB,YAAa,MACbX,OAAQ,YA8BGY,EA3BA,CACXC,MAAOvH,OAAOC,OAAO,GAAIgG,EAAY,CACjCuB,KAAMxH,OAAOC,OAAO,GAAIgG,EAAWuB,KAAM,CACrCC,gBAAiB,OACjBP,MAAO,YAEXQ,OAAQ1H,OAAOC,OAAO,GAAIgG,EAAWyB,OAAQ,CACzCD,gBAAiB,SAErBzB,OAAQhG,OAAOC,OAAO,GAAIgG,EAAWD,OAAQ,CACzCkB,MAAO,cAGfS,KAAM3H,OAAOC,OAAO,GAAIgG,EAAY,CAChCuB,KAAMxH,OAAOC,OAAO,GAAIgG,EAAWuB,KAAM,CACrCC,gBAAiB,OACjBP,MAAO,YAEXQ,OAAQ1H,OAAOC,OAAO,GAAIgG,EAAWyB,OAAQ,CACzCD,gBAAiB,YAErBzB,OAAQhG,OAAOC,OAAO,GAAIgG,EAAWD,OAAQ,CACzCkB,MAAO,e,eCrDbU,EAAO,aAEQC,E,kDAEjB,cAA+D,IAAD,EAAhD3H,EAAgD,EAAhDA,QAASS,EAAuC,EAAvCA,UAAWgE,EAA4B,EAA5BA,WAAYqB,EAAgB,EAAhBA,OAAQlH,EAAQ,EAARA,KAAQ,4BAC1D,gBACK4F,KAAO,IAAIA,EAAKC,GACrB,EAAKmD,aAAc,EACnB,EAAKrJ,MAAQ,CACTC,SAAU,CAAEC,KAAM,CAAEC,SAAUoH,EAAOpF,MAAM,KAAK,GAAIgD,SAAUoC,EAAOpF,MAAM,KAAK,KAChFV,QAASA,EAAQiD,QACjBxC,UAAWX,OAAOC,OAAO,GAAIU,GAC7B3B,IAAKF,EAAOA,EAAKqE,MAAM,GAAK,GAC5BrE,KAAMA,GAAc,KAExB,EAAKA,KAAKA,GAAc,IACxB,EAAKiJ,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBAbuC,E,qDAgB9D,WACIpD,KAAKsD,KAAK3E,MAAM4E,U,mCAoBpB,SAAsBC,EAAW3C,GAC7B,OAAQb,KAAKnG,QAAUgH,GAAeb,KAAKyD,QAAUD,I,gCAMzD,WACIxD,KAAKsD,KAAK3E,MAAM+E,mB,iCAOpB,WACI,IAAM/E,EAAQqB,KAAKsD,KAAK3E,MAAMnD,MACxBmI,EAAa3D,KAAKF,KAAK8D,aAAajF,EAAOqB,KAAKnG,OAClD8J,IACA3D,KAAKsD,KAAK3E,MAAMnD,MAAQmI,K,2BAShC,SAAcE,GA3EK,KA4EXA,EAAIC,MACJ9D,KAAKkD,aAAc,EAxET,IAyEHW,EAAIC,QAEX9D,KAAK+D,sBACLF,EAAIG,oB,yBAeZ,SAAYH,GA/FI,KAgGRA,EAAIC,MACA9D,KAAKkD,aACLlD,KAAKiE,SAASjE,KAAKF,KAAKoE,QAAQ,QAASlE,KAAKnG,QAjG1C,KAmGDgK,EAAIC,MACP9D,KAAKkD,cACLlD,KAAKiE,SAAL,2BACOjE,KAAKnG,OADZ,IAEIyB,QAAS0E,KAAKnG,MAAMyB,QAAQC,OAAO,CAC/BC,MAAOwE,KAAKsD,KAAK3E,MAAMnD,MAAQ,KAC/BpB,IAAK4F,KAAKnG,MAAMO,SAGxB4F,KAAKsD,KAAK3E,MAAMnD,MAAQ,IA3GnB,KA6GFqI,EAAIC,MACP9D,KAAKF,KAAKqE,mBACVnE,KAAKsD,KAAK3E,MAAMnD,MAAQwE,KAAKF,KAAKsE,kBA9G3B,KAgHJP,EAAIC,MACP9D,KAAKF,KAAKuE,iBACVrE,KAAKsD,KAAK3E,MAAMnD,MAAQwE,KAAKF,KAAKwE,iBAElCtE,KAAKsD,KAAK3E,MAAMnD,MAAQ,GAxHjB,KA0HJqI,EAAIC,QACX9D,KAAKkD,aAAc,K,0BAI3B,SAAaW,GACTA,EAAIG,iBAGJ,IAAMrF,EAAQkF,EAAIU,OAAO,GAAG/I,MACtB+E,EAAWP,KAAKF,KAAKoE,QAAQvF,EAAOqB,KAAKnG,OAC/CmG,KAAKiE,SAAS1D,GACdP,KAAKsD,KAAK3E,MAAMnD,MAAQ,K,qBAG5B,SAAQI,GACJ,OAAIoE,KAAK9F,KAAa0B,EAAKpB,QAAQwF,KAAK9F,KAAM,KAClC0B,I,+BAGhB,SAAkB4I,GAAQ,IAAD,OACrB,OAAO,SAAC1D,EAAMpE,GACV,IAAM0E,EAASN,EAAKzE,eAAe,OAC/B,sBAAMmI,MAAOA,EAAMpD,OAAnB,mBAA+B,EAAKqC,MAAMrC,OAA1C,YAAoD,EAAKqD,QAAL,WAAiB3D,EAAK1G,MAA1E,aAEA+E,EAEJ,OAAO,sBAAKuF,eAAA,kBAAyBhI,GAA9B,UAAiD0E,EAAQN,EAAKtF,MAAQsF,EAAKtF,MAAQ,yBAAzCkB,M,oBAIzD,WAAU,IAAD,SAC6BsD,KAAKyD,MAA/BrC,EADH,EACGA,OAAQsB,EADX,EACWA,OAAQiC,EADnB,EACmBA,MADnB,EAEoB3E,KAAKnG,MAAtByB,EAFH,EAEGA,QAASlB,EAFZ,EAEYA,IACXoK,EAAQpJ,OAAOC,OAAO,GAAIuJ,EAAOD,IAAUC,EAAOjC,MAAOD,GAE/D,OACI,qBAAK8B,MAAOA,EAAMK,KAAlB,SACI,sBACIL,MAAOA,EAAM5B,KACbkC,QAAS,kBAAM,EAAKxB,KAAK3E,MAAM4E,SAC/BwB,cAAe,SAACC,GACZA,EAAEhB,iBACF1J,UAAU2K,UAAUC,WAAWC,MAAK,SAAAC,GAAI,OAAI,EAAK9B,KAAK3E,MAAMnD,MAAQ,EAAK8H,KAAK3E,MAAMnD,MAAQ4J,KAC5F,EAAK9B,KAAK3E,MAAM4E,SANxB,UASKjI,EAAQwB,IAAIkD,KAAKqF,kBAAkBb,IACpC,uBAAMc,SAAU,SAAAzB,GAAG,OAAI,EAAK0B,aAAa1B,IAAMW,MAAOA,EAAMgB,KAA5D,UACI,sBAAMhB,MAAOA,EAAMpD,OAAnB,mBAA+BA,EAA/B,YAAyCpB,KAAKyE,QAAL,WAAiBrK,IAA1D,QACA,uBACEqL,aAAa,MACbC,UAAW1F,KAAKmD,cAChBwC,QAAS3F,KAAKqD,YACduC,IAAI,QACJC,GAAG,QACHrB,MAAOA,EAAM7F,oB,GA1KDmH,aAmLtC7C,EAAS8C,OAAS,CACdC,MAAO,QACPC,KAAM,QAeVhD,EAASiD,aAAe,CACpBnG,WAAY,GACZzE,QAAS,GACT6K,QAASnD,EACToD,SAAUpD,EACVqD,WAAYrD,EACZ5B,OAAQ,iBACRrF,UAAW,GACX2G,OAAQ,GACRiC,MAAO1B,EAAS8C,OAAOC,OCvNZM,QCFFvK,G,MAAY,CACrB,KAAQ,CACN,MAAS,CACP,UAAW,CAAEqB,QAAS,iCACtB,YAAa,CAACA,QCPR,+BDQN,KAAQ,CACJ,cAAe,CAAEA,QETf,0EFaV,IAAO,GACP,IAAO,CACH,IAAO,CACH,GAAM,CAAEmJ,QAAQ,GAChB,IAAO,CAAEA,QAAQ,KAGzB,IAAO,CACH,KAAQ,CAAEA,QAAQ,MGnBbC,EAAkB,CAC3B,CAAEhL,MAAO,kCACT,CAAEA,MAAO,wCACT,CAAEA,MAAO,uDACT,CAAEA,MAAO,KAGAuE,EAAa,CACtB0G,KAAM,CACF5J,KAAM,YAAkC,IAA/Bd,EAA8B,EAA9BA,UAAWT,EAAmB,EAAnBA,QAChB,MAAO,CAAES,YAAW3B,IADe,EAAVA,IAErBkB,QAASA,EAAQC,OAAO,CAAEC,MAAO,qBAI7CkL,OAAQ,CACJ7J,KAAM,YAAkC,IAA/Bd,EAA8B,EAA9BA,UAAWT,EAAmB,EAAnBA,QAASlB,EAAU,EAAVA,IAGzB,OAFAnB,OAAO0N,KAAK,wCAAyC,UAAUpD,QAExD,CAAExH,YAAW3B,MAChBkB,QAASA,EAAQC,OAAO,CAAEC,MAAO,yBAI7CoL,SAAU,CACN/J,KAAM,YAAkC,IAA/Bd,EAA8B,EAA9BA,UAAWT,EAAmB,EAAnBA,QAASlB,EAAU,EAAVA,IAGzB,OAFAnB,OAAO0N,KAAK,kDAAmD,UAAUpD,QAElE,CAAExH,YAAW3B,MAChBkB,QAASA,EAAQC,OAAO,CAAEC,MAAO,2BAI7CqL,MAAO,CACHhK,KAAM,YAAkC,IAA/Bd,EAA8B,EAA9BA,UAA8B,EAAnBT,QAChB,MAAO,CAAES,YAAW3B,IADe,EAAVA,IAErBkB,QAASkL,KAIrBM,KAAM,CACFjK,KAAM,SAAChD,EAAD,GAAsB,IAClB+B,EADiB,EAAXqB,KACM,IAAM,GAClBC,EAAWzB,EAAYG,EAAM/B,EAAMO,KAFlB,EAGF0B,EAAmBjC,EAAMkC,UAAWmB,GAAjDd,EAHe,EAGfA,IAAKH,EAHU,EAGVA,IAEb,GAAIG,EAAK,OAAOnB,EAAYpB,EAAOuC,EAAKR,GAqCxC,OAtBa,SAACkL,GACV,IAAIC,EAAS,GAEb,SAASC,EAAUF,GACfA,EAAKlH,SAAQ,SAASqH,GAClBpN,EAAMyB,QAAUzB,EAAMyB,QAAQC,OAAO,CAACC,MAAM,GAAD,OAAK,KAAO0L,MAAMH,GAAQrJ,KAAK,MAA/B,YAAwCuJ,EAAKvK,OAErFuK,EAAKE,WACJJ,IACAC,EAAUC,EAAKE,WAEhBL,EAAK/F,QAAQkG,KAAUH,EAAK9L,OAAS,GACpC+L,OAKZC,CAAUF,GAGdM,CAjCgB,SAAVC,EAAWpL,GAGb,OAFab,OAAOmB,KAAKN,GAEba,KAAI,SAAAJ,GACZ,IAAM4K,EAAW,GAKjB,OAHAA,EAAQ,IAAU5K,IACZ,YAAaT,EAAIS,OAAW,WAAYT,EAAIS,KAAStB,OAAOmB,KAAKN,EAAIS,IAAM1B,OAAS,IAAGsM,EAAQ,SAAeD,EAAQpL,EAAIS,KAEzH4K,KAwBVD,CAAQpL,IAENpC,K,uBCrFJ,MAA0B,+BCM5B0N,EAAkB,SAAC,GAAkC,IAAjC5C,EAAgC,EAAhCA,MAAO6C,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,UAC9C,OAAO,qCACH,mBACIC,KAAK,IACLC,UAAU,eACVnD,MAAK,2BACEiD,GADF,IAEDG,IAAK,SAET9C,QAAS0C,EAPb,SAUc,SAAV7C,EACA,cAAC,IAAD,CAAQgD,UAAU,eAElB,cAAC,IAAD,CAAOA,UAAU,iBAIrB,mBACIA,UAAU,eACVD,KAAK,wCACLnD,OAAO,SACPsD,IAAI,aACJrD,MAAK,2BACEiD,GADF,IAEDG,IAAK,SAPb,SAUI,cAAC,IAAD,CAAUD,UAAU,iBAGxB,mBACIA,UAAU,eACVD,KAAK,kDACLG,IAAI,aACJtD,OAAO,SACPC,MAAK,2BACEiD,GADF,IAEDG,IAAK,UAPb,SAUI,cAAC,IAAD,CAAcD,UAAU,iBAG5B,mBACIA,UAAU,eACVD,KAAK,wCACLG,IAAI,aACJtD,OAAO,SACPC,MAAK,2BACEiD,GADF,IAEDG,IAAK,UAPb,SAUI,cAAC,IAAD,CAAQD,UAAU,iBAGtB,mBACIA,UAAU,eACVD,KAAMI,EACNC,SAAU,0BACVF,IAAI,aACJtD,OAAO,SACPC,MAAK,2BACEiD,GADF,IAEDG,IAAK,UARb,SAWI,cAAC,IAAD,CAAeD,UAAU,qBCtBtBK,MAzCf,WAAgB,IAAD,EACaC,mBAAS,QADtB,mBACNtD,EADM,KACC6C,EADD,KAGPU,EAAmB,CACvBC,MAAO,CACLtL,KAAM,SAAChD,GAEL,OADA2N,EAAS,SACF3N,IAGXuO,IAAK,CACHvL,KAAM,SAAChD,GAEL,OADA2N,EAAS,QACF3N,KAKb,OACE,qCACE,cAAC,EAAD,CACEyB,QAASkL,EACTzG,WAAU,2BAAMA,GAAemI,GAC/BnM,UAAWA,EACX4I,MAAOA,EACPvD,OAAO,gBACPlH,KAAK,gBAGP,cAAC,EAAD,CACEyK,MAAOA,EACP6C,SAAU,kBAAMA,GAAS,SAAA7C,GAAK,MAAc,SAAVA,EAAmB,QAAU,WAC/D8C,UAAW,CACT5E,gBAAiBH,EAAOiC,GAAO/B,KAAKN,MACpCA,MAAOI,EAAOiC,GAAO/B,KAAKC,uBClCrBwF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpD,MAAK,YAAkD,IAA/CqD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.2047d602.chunk.js","sourcesContent":["export const IS_SERVER = typeof window === 'undefined';\n\nexport const BACK_REGEX = /\\/?\\.?[\\w-_]+\\/\\.\\./;\n\nexport const Errors = {\n    COMMAND_NOT_FOUND: '-bash: $1: command not found',\n    FILE_EXISTS: 'mkdir: $1: File exists',\n    NO_SUCH_FILE: '-bash: $1: No such file or directory',\n    NOT_A_DIRECTORY: '-bash: $1: Not a directory',\n    IS_A_DIRECTORY: 'cat: $1: Is a directory',\n    IS_BINARY: 'cat: $1: Is a binary file'\n};\n\nexport const EnvVariables = {\n    SHELL:'/bin/bash',\n    USER: state => state.settings.user.username,\n    PATH: state => `/bin:/usr/bin:${state.home}`,\n    PWD: state => `/${state.cwd}`,\n    LANG: () => {\n        return !IS_SERVER ? `${navigator.language.replace('-', '_')}.UTF-8` : 'en_US.UTF-8';\n    },\n    HOME: state => state.home,\n    LOGNAME: state => state.settings.user.username,\n    OLDPWD: '/',\n};\n","import { Errors, BACK_REGEX, EnvVariables } from './const';\n\n/*\n * This is a utility method for trimming the beginning\n * and ending of a string of any given char.\n *\n * @param {string} str - the string the trim\n * @param {string} char - the char to remove\n * @returns {string} the trimmed string\n */\nexport function trim(str, char) {\n    if (str[0] === char) {\n        str = str.substr(1);\n    }\n    if (str[str.length - 1] === char) {\n        str = str.substr(0, str.length - 1);\n    }\n    return str;\n}\n\n/*\n * This is a utility method for appending an error\n * message to the current state.\n *\n * @param {Object} state - the terminal state\n * @param {string} error - the error to interpolate\n * @param {string} command - the string to insert\n * @returns {Object} the new terminal state\n */\nexport function appendError(state, error, command) {\n    return Object.assign({}, state, {\n        error: true,\n        history: state.history.concat({\n            value: error.replace('$1', command),\n        }),\n    });\n}\n\n/*\n * This is a utility method for appending a relative path\n * to a root path. Handles trimming and backtracking.\n *\n * @param {string} relativePath\n * @param {string} rootPath\n * @returns {string} the combined path\n */\nexport function extractPath(relativePath, rootPath) {\n    // Short circuit for relative path\n    if (relativePath === '') return rootPath;\n\n    // Strip trailing slash\n    relativePath = trim(relativePath, '/');\n\n    // Create raw path\n    let path = `${rootPath ? rootPath + '/' : ''}${relativePath}`;\n\n    // Strip ../ references\n    while (path.match(BACK_REGEX)) {\n        path = path.replace(BACK_REGEX, '');\n    }\n    return trim(path, '/');\n}\n\n/*\n * This is a utility method for traversing the structure\n * down the relative path.\n *\n * @param {Object} structure - the terminal file structure\n * @param {string} relativePath - the path of the directory\n * @returns {Object} the directory or error\n */\nexport function getDirectoryByPath(structure, relativePath) {\n    const path = relativePath.split('/');\n\n    // Short circuit for empty root path\n    if (!path[0]) return { dir: structure };\n\n    let dir = structure;\n    let i = 0;\n    while (i < path.length) {\n        const key = path[i];\n        const child = dir[key];\n        if (child && typeof child === 'object') {\n            if (child.hasOwnProperty('content')) {\n                return { err: Errors.NOT_A_DIRECTORY.replace('$1', relativePath) };\n            } else {\n                dir = child;\n            }\n        } else {\n            return { err: Errors.NO_SUCH_FILE.replace('$1', relativePath) };\n        }\n        i++;\n    }\n    return { dir };\n}\n\n/*\n * This is a utility method for getting the environment\n * variables with the dynamic values updated with state.\n *\n * @param {Object} state - the terminal state\n * @returns {Object} the updated env variables\n */\nexport function getEnvVariables(state) {\n    return Object.keys(EnvVariables).reduce((envVars, key) => {\n        const value = EnvVariables[key];\n        envVars[key] = typeof value === 'function' ? value(state) : value;\n        return envVars;\n    }, {});\n}\n\n/*\n * This is a utility method for determining if a given filesystem entry is a\n * file or directoy.\n *\n * @param {Object} entry - the filesystem entry\n * @returns {Boolean} whether the entry is a file\n */\nexport function isFile(entry) {\n    return entry.content !== undefined;\n}","import * as Util from './util';\nimport { Errors } from './const';\n\nconst helpCommands = ['clear', 'ls', 'cat', 'mkdir', 'cd', 'pwd', 'echo', 'printenv', 'whoami', 'rm', 'hostname', 'tree', 'github', 'linkedin'];\n\nexport const help = {\n    exec: (state) => {\n        return Object.assign({}, state, {\n            history: state.history.concat(\n                { value: 'Available commands:' },\n                ...helpCommands.map(value => ({ value }))\n            ),\n        });\n    },\n};\n\nexport const ls = {\n    exec: (state, { flags, args }) => {\n        const path = args[0] || '';\n        const fullPath = Util.extractPath(path, state.cwd);\n        const { err, dir } = Util.getDirectoryByPath(state.structure, fullPath);\n\n        if (err) {\n            return Util.appendError(state, err, path);\n        } else {\n            let content = Object.keys(dir);\n            if (!flags.a) {\n                content = content.filter(name => name[0] !== '.');\n            }\n            else {\n                content.unshift(\"..\")\n                content.unshift(\".\")\n            }\n            if (flags.l) {\n                return Object.assign({}, state, {\n                    history: state.history.concat(content.map(value => {\n                        return { value };\n                    })),\n                });\n            } else {\n                return Object.assign({}, state, {\n                    history: state.history.concat({ value: content.join(' ') }),\n                });\n            }\n        }\n    },\n};\n\nexport const cat = {\n    exec: (state, { args }) => {\n        const path = args[0];\n        const relativePath = path.split('/');\n        const fileName = relativePath.pop();\n        const fullPath = Util.extractPath(relativePath.join('/'), state.cwd);\n        const { err, dir } = Util.getDirectoryByPath(state.structure, fullPath);\n        if (err) {\n            return Util.appendError(state, err, path);\n        } else if (!dir[fileName]) {\n            return Util.appendError(state, Errors.NO_SUCH_FILE, path);\n        } else if (dir[fileName].hasOwnProperty('binary')) {\n            return Util.appendError(state, Errors.IS_BINARY, path);\n        } else if (!dir[fileName].hasOwnProperty('content')) {\n            return Util.appendError(state, Errors.IS_A_DIRECTORY, path);\n        } else {\n            const content = dir[fileName].content.replace(/\\n$/, '');\n            const lines = content.split('\\n').map(value => ({ value }));\n            return Object.assign({}, state, {\n                history: state.history.concat(lines),\n            });\n        }\n    },\n};\n\nexport const mkdir = {\n    exec: (state, { args }) => {\n        const path = args[0];\n        const relativePath = path.split('/');\n        const newDirectory = relativePath.pop();\n        const fullPath = Util.extractPath(relativePath.join('/'), state.cwd);\n        const deepCopy = JSON.parse(JSON.stringify(state.structure));\n        const { dir } = Util.getDirectoryByPath(deepCopy, fullPath);\n\n        if (dir[newDirectory]) {\n            return Util.appendError(state, Errors.FILE_EXISTS, path);\n        } else {\n            dir[newDirectory] = {};\n            return Object.assign({}, state, { structure: deepCopy });\n        }\n    },\n};\n\nexport const cd = {\n    exec: (state, { args }) => {\n        const path = args[0];\n        const envVariables = Util.getEnvVariables(state);\n\n        if (!path) return Object.assign({}, state, { cwd: envVariables.HOME !== '/' ? envVariables.HOME.slice(1) : envVariables.HOME });\n        if (path === '/') return Object.assign({}, state, { cwd: '' });\n        // if (path === '-') return Object.assign({}, state, { cwd: '' });\n\n        const fullPath = Util.extractPath(path, state.cwd);\n        const { err } = Util.getDirectoryByPath(state.structure, fullPath);\n\n        if (err) {\n            return Util.appendError(state, err, path);\n        } else {\n            return Object.assign({}, state, { cwd: fullPath });\n        }\n    },\n};\n\nexport const pwd = {\n    exec: (state) => {\n        const directory = `/${state.cwd}`;\n        return Object.assign({}, state, {\n            history: state.history.concat({ value: directory }),\n        });\n    },\n};\n\nexport const echo = {\n    exec: (state, { input }) => {\n        const ECHO_LENGTH = 'echo '.length;\n        const envVariables = Util.getEnvVariables(state);\n        const value = input.slice(ECHO_LENGTH).replace(/(\\$\\w+)/g, key => {\n            return envVariables[key.slice(1)] || '';\n        });\n        return Object.assign({}, state, {\n            history: state.history.concat({ value }),\n        });\n    },\n};\n\nexport const printenv = {\n    exec: (state) => {\n        const envVariables = Util.getEnvVariables(state);\n        const values = Object.keys(envVariables).map(key => {\n            return { value: `${key}=${envVariables[key]}` };\n        });\n        return Object.assign({}, state, {\n            history: state.history.concat(values),\n        });\n    },\n};\n\nexport const whoami = {\n    exec: (state) => {\n        const value = state.settings.user.username;\n        return Object.assign({}, state, {\n            history: state.history.concat({ value }),\n        });\n    },\n};\n\nexport const hostname = {\n    exec: (state) => {\n        const value = state.settings.user.hostname;\n        return Object.assign({}, state, {\n            history: state.history.concat({ value }),\n        });\n    },\n};\n\nexport const rm = {\n    exec: (state, { flags, args }) => {\n        const path = args[0];\n        const relativePath = path.split('/');\n        const file = relativePath.pop();\n        const fullPath = Util.extractPath(relativePath.join('/'), state.cwd);\n        const deepCopy = JSON.parse(JSON.stringify(state.structure));\n        const { dir } = Util.getDirectoryByPath(deepCopy, fullPath);\n\n        if (dir[file]) {\n            // folder deletion requires the recursive flags `-r` or `-R`\n            if (!Util.isFile(dir[file]) && !(flags.r || flags.R)) {\n                return Util.appendError(state, Errors.IS_A_DIRECTORY, path);\n            }\n            delete dir[file];\n            return Object.assign({}, state, { structure: deepCopy });\n        } else {\n            return Util.appendError(state, Errors.NO_SUCH_FILE, path);\n        }\n    },\n};\n","/*\n * This method parses a single command + args. It handles\n * the tokenization and processing of flags, anonymous args,\n * and named args.\n *\n * @param {string} input - the user input to parse\n * @returns {Object} the parsed command/arg dataf84t56y78ju7y6f\n */\nexport function parseInput(input) {\n    const tokens = input.split(/ +/);\n    const name = tokens.shift();\n    const flags = {};\n    const args = {};\n    let anonArgPos = 0;\n\n    while (tokens.length > 0) {\n        const token = tokens.shift();\n        if (token[0] === '-') {\n            if (token[1] === '-') {\n                const next = tokens.shift();\n                args[token.slice(2)] = next;\n            } else {\n                token.slice(1).split('').forEach(flag => {\n                    flags[flag] = true;\n                });\n            }\n        } else {\n            args[anonArgPos++] = token;\n        }\n    }\n    return { name, flags, input, args };\n}\n\n/*\n * This function splits the input by `&&`` creating a\n * dependency chain. The chain consists of a list of\n * other commands to be run.\n *\n * @param {string} input - the user input\n * @returns {Array} a list of lists of command/arg pairs\n *\n * Example: `cd dir1; cat file.txt && pwd`\n * In this example `pwd` should only be run if dir/file.txt\n * is a readable file. The corresponding response would look\n * like this, where the outer list is the dependent lists..\n *\n * [\n *   [\n *     { command: 'cd', args: { 0: 'dir1'} },\n *     { command: 'cat', args: { 0: 'file.txt'} }\n *   ],\n *   [\n *     { command: 'pwd' }\n *   ]\n * ]\n */\nexport function parse(inputs) {\n    return inputs.trim().split(/ *&& */)\n        .map(deps => deps.split(/ *; */).map(parseInput));\n}","import * as Util from './util';\nimport { Errors } from './const';\nimport * as BaseCommands from './commands';\nimport * as BashParser from './parser';\n\nexport default class Bash {\n\n    constructor(extensions = {}) {\n        this.commands = Object.assign(extensions, BaseCommands);\n        this.prevCommands = [];\n        this.prevCommandsIndex = 0;\n    }\n\n    /*\n     * This parses and executes the given <input> and returns an updated\n     * state object.\n     *\n     * @param {string} input - the user input\n     * @param {Object} state - the current terminal state\n     * @returns {Object} the new terminal state\n     */\n    execute(input, currentState) {\n        this.prevCommands.push(input);\n        this.prevCommandsIndex = this.prevCommands.length;\n\n        // Append input to history\n        const newState = Object.assign({}, currentState, {\n            history: currentState.history.concat({\n                cwd: currentState.cwd,\n                value: input,\n            }),\n        });\n\n        const commandList = BashParser.parse(input);\n        return this.runCommands(commandList, newState);\n    }\n\n    /*\n     * This function executes a list of command lists. The outer list\n     * is a dependency list parsed from the `&&` operator. The inner lists\n     * are groups of commands parsed from the `;` operator. If any given\n     * command fails, the outer list will stop executing.\n     *\n     * @param {Array} commands - the commands to run\n     * @param {Object} state - the terminal state\n     * @returns {Object} the new terminal state\n     */\n    runCommands(commands, state) {\n        let errorOccurred = false;\n\n        /*\n         * This function executes a single command and marks whether an error\n         * occurred. If an error occurs, the following dependent commands should\n         * not be run.\n         */\n        const reducer = (newState, command) => {\n            if (command.name === '') {\n                return newState;\n            } else if (this.commands[command.name]) {\n                const nextState = this.commands[command.name].exec(newState, command);\n                errorOccurred = errorOccurred || (nextState && nextState.error);\n                return nextState;\n            } else {\n                errorOccurred = true;\n                return Util.appendError(newState, Errors.COMMAND_NOT_FOUND, command.name);\n            }\n        };\n\n        while (!errorOccurred && commands.length) {\n            const dependentCommands = commands.shift();\n            state = dependentCommands.reduce(reducer, state);\n        }\n        return state;\n    }\n\n    /*\n     * This is a very naive autocomplete method that works for both\n     * commands and directories. If the input contains only one token it\n     * should only suggest commands.\n     *\n     * @param {string} input - the user input\n     * @param {Object} state - the terminal state\n     * @param {Object} state.structure - the file structure\n     * @param {string} state.cwd - the current working directory\n     * @returns {?string} a suggested autocomplete for the <input>\n     */\n    autocomplete(input, { structure, cwd }) {\n        const tokens = input.split(/ +/);\n        let token = tokens.pop();\n        const filter = item => item.indexOf(token) === 0;\n        const result = str => tokens.concat(str).join(' ');\n\n        if (tokens.length === 0) {\n            const suggestions = Object.keys(this.commands).filter(filter);\n            return suggestions.length === 1 ? result(suggestions[0]) : null;\n        } else {\n            const pathList = token.split('/');\n            token = pathList.pop();\n            const partialPath = pathList.join('/');\n            const path = Util.extractPath(partialPath, cwd);\n            const { err, dir } = Util.getDirectoryByPath(structure, path);\n            if (err) return null;\n            const suggestions = Object.keys(dir).filter(filter);\n            const prefix = partialPath ? `${partialPath}/` : '';\n            return suggestions.length === 1 ? result(`${prefix}${suggestions[0]}`) : null;\n        }\n    }\n\n    getPrevCommand() {\n        return this.prevCommands[--this.prevCommandsIndex];\n    }\n\n    getNextCommand() {\n        return this.prevCommands[++this.prevCommandsIndex];\n    }\n\n    hasPrevCommand() {\n        return this.prevCommandsIndex !== 0;\n    }\n\n    hasNextCommand() {\n        return this.prevCommandsIndex !== this.prevCommands.length - 1;\n    }\n\n}","const BaseStyles = {};\n\nBaseStyles.main = {\n    display: 'flex',\n    flexDirection: 'column',\n    fontFamily: '\\'Inconsolata\\', monospace',\n    fontSize: '13px',\n    fontWeight: '400',\n    overflow: 'hidden',\n    textAlign: 'left',\n    height: '100vh',\n    cursor: 'default',\n    userSelect: 'none'\n};\n\nBaseStyles.body = {\n    flexGrow: 1,\n    overflowY: 'auto',\n    padding: '10px',\n    transition: 'background-color .5s'\n};\n\nBaseStyles.form = {\n    display: 'flex',\n};\n\nBaseStyles.input = {\n    background: 'none',\n    border: 'none',\n    color: 'inherit',\n    flexGrow: '1',\n    fontFamily: 'inherit',\n    fontSize: 'inherit',\n    outline: 'none !important',\n    padding: 0,\n    cursor: 'default',\n    appearance: 'none'\n};\n\nBaseStyles.prefix = {\n    marginRight: '5px',\n    cursor: 'default',\n};\n\nconst styles = {\n    light: Object.assign({}, BaseStyles, {\n        body: Object.assign({}, BaseStyles.body, {\n            backgroundColor: '#fff',\n            color: '#5D5D5D',\n        }),\n        header: Object.assign({}, BaseStyles.header, {\n            backgroundColor: '#eee',\n        }),\n        prefix: Object.assign({}, BaseStyles.prefix, {\n            color: '#5b65fb',\n        }),\n    }),\n    dark: Object.assign({}, BaseStyles, {\n        body: Object.assign({}, BaseStyles.body, {\n            backgroundColor: '#000',\n            color: '#d0d0d0',\n        }),\n        header: Object.assign({}, BaseStyles.header, {\n            backgroundColor: '#dcdbdb',\n        }),\n        prefix: Object.assign({}, BaseStyles.prefix, {\n            color: '#16a130',\n        }),\n    }),\n};\n\nexport default styles;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport * as BaseCommands from './commands';\nimport Bash from './bash';\nimport Styles from './styles';\nimport './index.css'\n\nconst CTRL_CHAR_CODE = 17;\nconst L_CHAR_CODE = 76;\nconst C_CHAR_CODE = 67;\nconst UP_CHAR_CODE = 38;\nconst DOWN_CHAR_CODE = 40;\nconst TAB_CHAR_CODE = 9;\nconst noop = () => {};\n\nexport default class Terminal extends Component {\n\n    constructor({ history, structure, extensions, prefix, home }) {\n        super();\n        this.Bash = new Bash(extensions);\n        this.ctrlPressed = false;\n        this.state = {\n            settings: { user: { username: prefix.split('@')[0], hostname: prefix.split('@')[1] } },\n            history: history.slice(),\n            structure: Object.assign({}, structure),\n            cwd: home ? home.slice(1) : '',\n            home: home ? home : '/',\n        };\n        this.home=home ? home : '/';\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n    }\n\n    componentDidMount() {\n        this.refs.input.focus();\n    }\n\n    // componentWillReceiveProps({ extensions, structure, history }) {\n    //     const updatedState = {};\n    //     if (structure) {\n    //         updatedState.structure = Object.assign({}, structure);\n    //     }\n    //     if (history) {\n    //         updatedState.history = history.slice();\n    //     }\n    //     if (extensions) {\n    //         this.Bash.commands = Object.assign({}, extensions, BaseCommands);\n    //     }\n    //     this.setState(updatedState);\n    // }\n\n    /*\n     * Utilize immutability\n     */\n    shouldComponentUpdate(nextProps, nextState) {\n        return (this.state !== nextState) || (this.props !== nextProps);\n    }\n\n    /*\n     * Keep input in view on change\n     */\n    componentDidUpdate() {\n        this.refs.input.scrollIntoView();\n    }\n\n    /*\n     * Forward the input along to the Bash autocompleter. If it works,\n     * update the input.\n     */\n    attemptAutocomplete() {\n        const input = this.refs.input.value;\n        const suggestion = this.Bash.autocomplete(input, this.state);\n        if (suggestion) {\n            this.refs.input.value = suggestion;\n        }\n    }\n\n    /*\n     * Handle keydown for special hot keys. The tab key\n     * has to be handled on key down to prevent default.\n     * @param {Event} evt - the DOM event\n     */\n    handleKeyDown(evt) {\n        if (evt.which === CTRL_CHAR_CODE) {\n            this.ctrlPressed = true;\n        } else if (evt.which === TAB_CHAR_CODE) {\n            // Tab must be on keydown to prevent default\n            this.attemptAutocomplete();\n            evt.preventDefault();\n        }\n    }\n\n    /*\n     * Handle keyup for special hot keys.\n     * @param {Event} evt - the DOM event\n     *\n     * -- Supported hot keys --\n     * ctrl + l : clear\n     * ctrl + c : cancel current command\n     * up - prev command from history\n     * down - next command from history\n     * tab - autocomplete\n     */\n    handleKeyUp(evt) {\n        if (evt.which === L_CHAR_CODE) {\n            if (this.ctrlPressed) {\n                this.setState(this.Bash.execute('clear', this.state));\n            }\n        } else if (evt.which === C_CHAR_CODE) {\n            if (this.ctrlPressed) {\n                this.setState({\n                    ...this.state,\n                    history: this.state.history.concat({\n                        value: this.refs.input.value + '^C',\n                        cwd: this.state.cwd\n                    })\n                })\n                this.refs.input.value = '';\n            }\n        } else if (evt.which === UP_CHAR_CODE) {\n            if (this.Bash.hasPrevCommand()) {\n                this.refs.input.value = this.Bash.getPrevCommand();\n            }\n        } else if (evt.which === DOWN_CHAR_CODE) {\n            if (this.Bash.hasNextCommand()) {\n                this.refs.input.value = this.Bash.getNextCommand();\n            } else {\n                this.refs.input.value = '';\n            }\n        } else if (evt.which === CTRL_CHAR_CODE) {\n            this.ctrlPressed = false;\n        }\n    }\n\n    handleSubmit(evt) {\n        evt.preventDefault();\n\n        // Execute command\n        const input = evt.target[0].value;\n        const newState = this.Bash.execute(input, this.state);\n        this.setState(newState);\n        this.refs.input.value = '';\n    }\n\n    getPath(path) {\n        if (this.home) return path.replace(this.home, '~')\n        else return path\n    }\n\n    renderHistoryItem(style) {\n        return (item, key) => {\n            const prefix = item.hasOwnProperty('cwd') ? \n                <span style={style.prefix}>{`${this.props.prefix}:${this.getPath(`/${item.cwd}`)} $`}</span>\n            :\n                undefined;\n\n            return <div data-test-id={`history-${key}`} key={key} >{prefix}{item.value ? item.value : <br/>}</div>;\n        };\n    }\n\n    render() {\n        const { prefix, styles, theme } = this.props;\n        const { history, cwd } = this.state;\n        const style = Object.assign({}, Styles[theme] || Styles.light, styles);\n\n        return (\n            <div style={style.main}>\n                <div\n                    style={style.body}\n                    onClick={() => this.refs.input.focus()}\n                    onContextMenu={(e) => {\n                        e.preventDefault();\n                        navigator.clipboard.readText().then(text => this.refs.input.value = this.refs.input.value + text)\n                        this.refs.input.focus();\n                    }}\n                >\n                    {history.map(this.renderHistoryItem(style))}\n                    <form onSubmit={evt => this.handleSubmit(evt)} style={style.form}>\n                        <span style={style.prefix}>{`${prefix}:${this.getPath(`/${cwd}`)} $`}</span>\n                        <input\n                          autoComplete=\"off\"\n                          onKeyDown={this.handleKeyDown}\n                          onKeyUp={this.handleKeyUp}\n                          ref=\"input\"\n                          id=\"input\"\n                          style={style.input}\n                        />\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nTerminal.Themes = {\n    LIGHT: 'light',\n    DARK: 'dark',\n};\n\nTerminal.propTypes = {\n    extensions: PropTypes.object,\n    history: PropTypes.array,\n    onClose: PropTypes.func,\n    onExpand: PropTypes.func,\n    onMinimize: PropTypes.func,\n    prefix: PropTypes.string,\n    structure: PropTypes.object,\n    styles: PropTypes.object,\n    theme: PropTypes.string,\n};\n\nTerminal.defaultProps = {\n    extensions: {},\n    history: [],\n    onClose: noop,\n    onExpand: noop,\n    onMinimize: noop,\n    prefix: 'hacker@default',\n    structure: {},\n    styles: {},\n    theme: Terminal.Themes.LIGHT,\n};","import ReactBash from './component';\nimport * as BashUtil from './util';\nimport * as BashConst from './const';\n\n\nexport default ReactBash;\n\nexport {\n    BashConst,\n    BashUtil,\n};","import summary from '../files/jobs/summary'\nimport main from '../files/main';\n\nexport const structure = {\n    'home': {\n      'guest': {\n        '.bashrc': { content: 'export PATH=$PATH:/home/guest' },\n        'README.md': {content: main},\n        'jobs': {\n            'summary.out': { content: summary }\n        }\n      }\n    },\n    'mnt': {},\n    'usr': {\n        'bin': {\n            'ls': { binary: true},\n            'cat': { binary: true},\n        }\n    },\n    'bin': {\n        'bash': { binary: true},\n    }\n};\n","export default (\n`\nWelcome to my resume.\n\n`\n)\n","export default (\n`\nasd\nasd\nasd\nasd\nasd\nasd\n\n \nternium\n\n\n\nasd\nasd\nasd\n`\n);\n","import { getDirectoryByPath, extractPath, appendError } from \"../components/bash/util\";\n\nexport const initial_history = [\n    { value: 'Welcome to Maxi\\'s bash resume.' },\n    { value: 'Type help to see available commands.' },\n    { value: 'Check the README.md file in the home for more info.' },\n    { value: '' },\n];\n\nexport const extensions = {\n    sudo: {\n        exec: ({ structure, history, cwd }) => {\n            return { structure, cwd,\n                history: history.concat({ value: 'Access denied' }),\n            };\n        },\n    },\n    github: {\n        exec: ({ structure, history, cwd }) => {\n            window.open(\"https://github.com/MaximilianoAguirre\", '_blank').focus();\n\n            return { structure, cwd,\n                history: history.concat({ value: 'Opening github...' }),\n            };\n        },\n    },\n    linkedin: {\n        exec: ({ structure, history, cwd }) => {\n            window.open(\"https://www.linkedin.com/in/maximilianoaguirre/\", '_blank').focus();\n\n            return { structure, cwd,\n                history: history.concat({ value: 'Opening linkedin...' }),\n            };\n        },\n    },\n    clear: {\n        exec: ({ structure, history, cwd }) => {\n            return { structure, cwd,\n                history: initial_history\n            };\n        },\n    },\n    tree: {\n        exec: (state, { args }) => {\n            const path = args[0] || '';\n            const fullPath = extractPath(path, state.cwd);\n            const { err, dir } = getDirectoryByPath(state.structure, fullPath);\n\n            if (err) return appendError(state, err, path)\n\n            const convert = (dir) => {\n                const keys = Object.keys(dir)\n\n                return keys.map(key => {\n                    const response = {}\n\n                    response['key'] = key\n                    if (!('content' in dir[key]) && !('binary' in dir[key]) && Object.keys(dir[key]).length > 0) response['children'] = convert(dir[key])\n\n                    return response\n                })\n            }\n\n            const walk = (tree) => {\n                var indent = 1;\n\n                function innerWalk(tree) {\n                    tree.forEach(function(node) {\n                        state.history = state.history.concat({value: `${'--' + Array(indent).join('--')} ${node.key}`})\n\n                        if(node.children) {\n                            indent ++;\n                            innerWalk(node.children);\n                        }\n                        if(tree.indexOf(node) === tree.length - 1) {\n                            indent--;\n                        }\n                    })\n                }\n\n                innerWalk(tree);\n            }\n\n            walk(convert(dir))\n\n            return state\n        }\n    }\n};","export default __webpack_public_path__ + \"static/media/cv.21e91858.pdf\";","import { FaSun, FaMoon, FaGithub, FaLinkedinIn } from 'react-icons/fa';\nimport { FiMail } from 'react-icons/fi';\nimport { GrDocumentPdf } from 'react-icons/gr';\n\nimport cv from '../docs/cv.pdf'\n\nexport const FloatingButtons = ({theme, setTheme, baseStyle}) => {\n    return <>\n        <a\n            href=\"#\"\n            className=\"float-button\"\n            style={{\n                ...baseStyle,\n                top: \"20px\"\n            }}\n            onClick={setTheme}\n        >\n            {\n            theme === \"dark\" ?\n            <FaMoon className='float-icon' />\n            :\n            <FaSun className='float-icon' />\n            }\n        </a>\n\n        <a\n            className=\"float-button\"\n            href=\"https://github.com/MaximilianoAguirre\"\n            target=\"_blank\"\n            rel='noreferrer'\n            style={{\n                ...baseStyle,\n                top: \"70px\"\n            }}\n        >\n            <FaGithub className='float-icon' />\n        </a>\n\n        <a\n            className=\"float-button\"\n            href=\"https://www.linkedin.com/in/maximilianoaguirre/\"\n            rel='noreferrer'\n            target=\"_blank\"\n            style={{\n                ...baseStyle,\n                top: \"120px\"\n            }}\n        >\n            <FaLinkedinIn className='float-icon' />\n        </a>\n\n        <a\n            className=\"float-button\"\n            href=\"mailto:maximiliano.aguirre@outlook.es\"\n            rel='noreferrer'\n            target=\"_blank\"\n            style={{\n                ...baseStyle,\n                top: \"170px\"\n            }}\n        >\n            <FiMail className='float-icon' />\n        </a>\n\n        <a\n            className=\"float-button\"\n            href={cv}\n            download={'Maximiliano Aguirre.pdf'}\n            rel='noreferrer'\n            target=\"_blank\"\n            style={{\n                ...baseStyle,\n                top: \"220px\"\n            }}\n        >\n            <GrDocumentPdf className='float-icon' />\n        </a>\n    </>\n}\n","import { useState } from 'react';\n\nimport Terminal from './components/bash/index';\nimport styles from './components/bash/styles';\n\nimport \"./css/floating_button.css\"\n\nimport { structure } from './conf/structure';\nimport { extensions, initial_history } from './conf/extensions';\n\nimport { FloatingButtons } from \"./components/FloatingButton\"\n\nfunction App() {\n  const [theme, setTheme] = useState(\"dark\");\n\n  const extra_extensions = {\n    lumos: {\n      exec: (state) => {\n        setTheme(\"light\")\n        return state\n      }\n    },\n    nox: {\n      exec: (state) => {\n        setTheme(\"dark\")\n        return state\n      }\n    }\n  }\n\n  return (\n    <>\n      <Terminal\n        history={initial_history}\n        extensions={{...extensions, ...extra_extensions}}\n        structure={structure}\n        theme={theme}\n        prefix=\"guest@pc-maxi\"\n        home=\"/home/guest\"\n      />\n\n      <FloatingButtons\n        theme={theme}\n        setTheme={() => setTheme(theme => theme === \"dark\" ? \"light\" : \"dark\")}\n        baseStyle={{\n          backgroundColor: styles[theme].body.color,\n          color: styles[theme].body.backgroundColor,\n        }}\n      />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/reset.css';\nimport './css/custom_scrollbar.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}